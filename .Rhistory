mutate(start = (start + end)/2),
aes(x = start, y = molecule, label = gene), inherit.aes = F, nudge_y = 0.25,nudge_x = 100000) +
geom_gene_arrow(arrowhead_height = unit(3, "mm"), arrowhead_width = unit(2, "mm"),show.legend = T) +
ylab('') +
xlab('') +
scale_fill_viridis_c(option = 'B') +
scale_x_continuous(labels = scales::comma,limits=c(13890000,14495000)) +
theme_genes()
SVMP <- all_info %>%
filter(str_detect(symbol,'SVMP|ADAM')) %>%
ggplot(aes(xmin = start, xmax = end, y = molecule, forward = direction, fill = avg1DPE)) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(symbol,'SVMP')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = molecule, label = symbol), inherit.aes = F, nudge_y = 1) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(symbol,'ADAM')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = molecule, label = symbol), inherit.aes = F, nudge_y = 0.25,nudge_x = 100000) +
geom_gene_arrow(arrowhead_height = unit(3, "mm"), arrowhead_width = unit(2, "mm"),show.legend = T) +
ylab('') +
xlab('') +
scale_fill_viridis_c(option = 'B') +
scale_x_continuous(labels = scales::comma,limits=c(13890000,14495000)) +
theme_genes()
SVMP
SVSP <- all_info %>%
filter(str_detect(symbol,'SVSP')) %>%
ggplot(aes(xmin = start, xmax = end, y = molecule, forward = direction, fill = log10avg1DPE)) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(symbol,'SVSP')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = molecule, label = symbol), inherit.aes = F, nudge_y = 1) +
geom_gene_arrow(arrowhead_height = unit(3, "mm"), arrowhead_width = unit(2, "mm"),show.legend = F) +
ylab('') +
xlab('') +
scale_fill_viridis_c(option = 'B',breaks=breaksList) +
scale_x_continuous(labels = scales::comma,limits=c(8560000,9000000)) +
theme_genes()
SVSP
SVSP <- all_info %>%
filter(str_detect(symbol,'SVSP')) %>%
ggplot(aes(xmin = start, xmax = end, y = molecule, forward = direction, fill = avg1DPE)) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(symbol,'SVSP')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = molecule, label = symbol), inherit.aes = F, nudge_y = 1) +
geom_gene_arrow(arrowhead_height = unit(3, "mm"), arrowhead_width = unit(2, "mm"),show.legend = F) +
ylab('') +
xlab('') +
scale_fill_viridis_c(option = 'B',breaks=breaksList) +
scale_x_continuous(labels = scales::comma,limits=c(8560000,9000000)) +
theme_genes()
PLA2 <- all_info %>%
filter(str_detect(symbol,'PLA2')) %>%
ggplot(aes(xmin = start, xmax = end, y = molecule, forward = direction, fill = avg1DPE)) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(symbol,'PLA2')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = molecule, label = symbol), inherit.aes = F, nudge_y = 1) +
geom_gene_arrow(arrowhead_height = unit(3, "mm"), arrowhead_width = unit(2, "mm"),show.legend = F) +
ylab('') +
xlab('') +
scale_fill_viridis_c(option = 'B',breaks=breaksList) +
scale_x_continuous(labels = scales::comma,limits=c(3019000,3045000)) +
theme_genes()
PLA2
CRISP <- all_info %>%
filter(str_detect(symbol,'CRISP')) %>%
ggplot(aes(xmin = start, xmax = end, y = molecule, forward = direction, fill = avg1DPE)) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(symbol,'CRISP')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = molecule, label = symbol), inherit.aes = F, nudge_y = 1) +
geom_gene_arrow(arrowhead_height = unit(3, "mm"), arrowhead_width = unit(2, "mm"),show.legend = F) +
ylab('') +
xlab('') +
scale_fill_viridis_c(option = 'B',breaks=breaksList) +
scale_x_continuous(labels = scales::comma,limits=c(169423000,169439000)) +
theme_genes()
CRISP
SVMP / SVSP / PLA2 + plot_layout(guides = 'collect')
CRISP2 <- c('scaffold-ma1',	'169434958',	'169437996',	'Cysteine-rich secretory protein',	'maker-scaffold-ma1-augustus-gene-564.2',	'crovir-transcript-8572',	'CRISP_2')
pri_venom_genes <- read_tsv('./data/venom_annotation/PriorityVenomGenes_08.02.21.txt',col_names = F) %>%
add_row(CRISP2)
CRISP2 <- c('scaffold-ma1',	'169434958',	'169437996',	'Cysteine-rich secretory protein',	'maker-scaffold-ma1-augustus-gene-564.2',	'crovir-transcript-8572',	'CRISP_2')
pri_venom_genes <- read_tsv('./data/venom_annotation/PriorityVenomGenes_08.02.21.txt',col_names = F) %>%
add_row(X1='scaffold-ma1',X2=169434958,X3=169437996,X4='Cysteine-rich secretory protein',X5='maker-scaffold-ma1-augustus-gene-564.2',X6='crovir-transcript-8572',X7='CRISP_2')
View(pri_venom_genes)
all_info <- read_tsv('./data/annotation/CroVir_rnd1.all.maker.final.homologIDs.updatedNov2019.GeneEntriesOnly.gff',col_names = F) %>%
filter(str_detect(X9,'trnascan',negate = T)) %>%
mutate(tx_id = str_split_fixed(X9,';',4)[,3]) %>%
mutate(tx_id = str_remove_all(tx_id,'Crovir_Transcript_ID=')) %>%
filter(tx_id %in% pri_venom_genes$X6) %>%
left_join(pri_venom_genes,by=c('tx_id' = 'X6')) %>%
select(molecule = 1, gene = 16, start = 4, end = 5, strand = 7,tx_id) %>%
mutate(strand = ifelse(strand == '+','forward','reverse')) %>%
mutate(direction = ifelse(strand == 'forward',1,-1)) %>%
left_join(exp,by=c('tx_id'='txid')) %>%
mutate(symbol = ifelse(str_detect(symbol,'ADAM28',negate = T),str_replace_all(symbol,'_',' '),symbol)) %>%
mutate(symbol = ifelse(str_detect(symbol,'ADAM28|gIIE'),paste('NVP: ',symbol,sep = ''),symbol))
CRISP <- all_info %>%
filter(str_detect(symbol,'CRISP')) %>%
ggplot(aes(xmin = start, xmax = end, y = molecule, forward = direction, fill = avg1DPE)) +
ggrepel::geom_text_repel(data = all_info %>%
+                              filter(str_detect(symbol,'CRISP')) %>%
+                              mutate(start = (start + end)/2),
+                            aes(x = start, y = molecule, label = symbol), inherit.aes = F, nudge_y = 1) +
geom_gene_arrow(arrowhead_height = unit(3, "mm"), arrowhead_width = unit(2, "mm"),show.legend = F) +
ylab('') +
xlab('') +
scale_fill_viridis_c(option = 'B',breaks=breaksList) +
scale_x_continuous(labels = scales::comma,limits=c(169423000,169439000)) +
theme_genes()
CRISP
CRISP <- all_info %>%
filter(str_detect(symbol,'CRISP')) %>%
ggplot(aes(xmin = start, xmax = end, y = molecule, forward = direction, fill = avg1DPE)) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(symbol,'CRISP')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = molecule, label = symbol), inherit.aes = F, nudge_y = 1) +
geom_gene_arrow(arrowhead_height = unit(3, "mm"), arrowhead_width = unit(2, "mm"),show.legend = F) +
ylab('') +
xlab('') +
scale_fill_viridis_c(option = 'B',breaks=breaksList) +
scale_x_continuous(labels = scales::comma,limits=c(169423000,169439000)) +
theme_genes()
CRISP
View(all_info)
exp <- all.normcounts %>%
select(gene=X1,4,8,9,2,3,5,6,7,10) %>%
mutate(avg1DPE = rowMeans(.[,2:4])) %>%
select(gene,avg1DPE) %>%
mutate(txid = str_split_fixed(gene,'[_]',2)[,2]) %>%
filter(txid %in% pri_venom_genes$X6) %>%
left_join(ven.nameConvert)
all_info <- read_tsv('./data/annotation/CroVir_rnd1.all.maker.final.homologIDs.updatedNov2019.GeneEntriesOnly.gff',col_names = F) %>%
filter(str_detect(X9,'trnascan',negate = T)) %>%
mutate(tx_id = str_split_fixed(X9,';',4)[,3]) %>%
mutate(tx_id = str_remove_all(tx_id,'Crovir_Transcript_ID=')) %>%
filter(tx_id %in% pri_venom_genes$X6) %>%
left_join(pri_venom_genes,by=c('tx_id' = 'X6')) %>%
select(molecule = 1, gene = 16, start = 4, end = 5, strand = 7,tx_id) %>%
mutate(strand = ifelse(strand == '+','forward','reverse')) %>%
mutate(direction = ifelse(strand == 'forward',1,-1)) %>%
left_join(exp,by=c('tx_id'='txid')) %>%
mutate(symbol = ifelse(str_detect(symbol,'ADAM28',negate = T),str_replace_all(symbol,'_',' '),symbol)) %>%
mutate(symbol = ifelse(str_detect(symbol,'ADAM28|gIIE'),paste('NVP: ',symbol,sep = ''),symbol))
CRISP <- all_info %>%
filter(str_detect(symbol,'CRISP')) %>%
ggplot(aes(xmin = start, xmax = end, y = molecule, forward = direction, fill = avg1DPE)) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(symbol,'CRISP')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = molecule, label = symbol), inherit.aes = F, nudge_y = 1) +
geom_gene_arrow(arrowhead_height = unit(3, "mm"), arrowhead_width = unit(2, "mm"),show.legend = F) +
ylab('') +
xlab('') +
scale_fill_viridis_c(option = 'B',breaks=breaksList) +
scale_x_continuous(labels = scales::comma,limits=c(169423000,169439000)) +
theme_genes()
CRISP
SVMP / SVSP / PLA2 / CRISP + plot_layout(guides = 'collect')
pheatmap(pla2.heatdata,
scale='none',
# clustering_distance_rows = 'manhattan',
cluster_cols = F,cluster_rows = F,
col=inferno(50),
# breaks = breaksList,
show_rownames = T,
border_color = NA,
cellwidth = 20,cellheight = 20,
treeheight_row = 0,
gaps_col = c(3))
pheatmap(svmp.heatdata,
scale='none',
# clustering_distance_rows = 'manhattan',
cluster_cols = F,cluster_rows = F,
col=inferno(50),
# breaks = breaksList,
show_rownames = T,
border_color = NA,
cellwidth = 20,cellheight = 20,
treeheight_row = 0,
gaps_col = 3)
pheatmap(svsp.heatdata,
scale='none',
# clustering_distance_rows = 'manhattan',
cluster_cols = F,cluster_rows = F,
col=inferno(50),
# breaks = breaksList,
show_rownames = T,
border_color = NA,
cellwidth = 20,cellheight = 20,
treeheight_row = 0,
gaps_col = 3)
pheatmap(other.heatdata,
scale='none',
cluster_cols = F,cluster_rows = F,
col=inferno(length(breaksList)),
# breaks = breaksList,
show_rownames = T,
border_color = NA,
cellwidth = 20,cellheight = 20,
treeheight_row = 0,
gaps_col = 3)
library(tidyverse)
library(pheatmap)
library(viridis)
'%!in%' <- function(x,y)!('%in%'(x,y))
longID.to.txID <- read_tsv('./data/annotation/CroVir_rnd1.all.maker.annotation_table.final.txt',col_names = F) %>%
select(longid = 1, txid = 2) %>%
mutate(longid = str_remove_all(longid, '-mRNA-1'))
all.normCounts <- read_csv('./analysis/1_gene_expression/norm_counts/CvvVenomReg_RepRNAseq_wNonVen_VSTNormCounts_08.02.21.csv') %>%
mutate(txid = str_split_fixed(X1,'_',2)[,2]) %>%
mutate(id = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(id = ifelse(id=='Venom',str_split_fixed(X1,'-',3)[,3],id))
Ven.vs.NonVen.pw <- read_csv('./analysis/1_gene_expression/pairwise_results/cvv_Venom.vs.NonVenom_VG_PairwiseResult_08.02.21.csv') %>%
filter(IHW_pvalue < 0.05) %>%
filter(IHW_pvalue < 0.05) %>%
mutate(direction = ifelse(log2FoldChange > 0, 'Up','Down')) %>%
mutate(txid = str_split_fixed(X1,'_',2)[,2]) %>%
mutate(id = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(id = ifelse(id=='Venom',str_split_fixed(X1,'-',3)[,3],id))
Ven.vs.NonVen.up <- Ven.vs.NonVen.pw %>% filter(direction == 'Up' & log2FoldChange > 1)
Ven.vs.NonVen.down <- Ven.vs.NonVen.pw %>% filter(direction == 'Down' & log2FoldChange < -1)
tf.dnaBinding <- read_tsv('./data/annotation/TF_lists/Cvv_TF.DNABinding.txt',col_names = F) %>%
mutate(type = 'DNA Binding') %>%
select(longid=1,id=3, type)
tf.protBinding <- read_tsv('./data/annotation/TF_lists/Cvv_TF.ProtBinding.txt',col_names = F) %>%
mutate(type = 'Protein Binding') %>%
select(longid=1,id=2, type)
tf.coreg <- read_tsv('./data/annotation/TF_lists/Cvv_TF.Coregulators.txt',col_names = F) %>%
mutate(type = 'Coregulator') %>%
select(longid=1,id=2, type)
# Combine all TF tables and add T/F columns for the three types
tf.all <- tf.dnaBinding %>%
bind_rows(tf.protBinding) %>%
bind_rows(tf.coreg) %>%
left_join(longID.to.txID) %>%
select(longid,txid,id) %>%
unique() %>%
mutate(DnaBinding = ifelse(longid %in% tf.dnaBinding$longid,T,F)) %>%
mutate(ProtBinding = ifelse(longid %in% tf.protBinding$longid,T,F)) %>%
mutate(Coregulator = ifelse(longid %in% tf.coreg$longid,T,F))
tf.normCounts <- all.normCounts %>%
filter(txid %in% tf.all$txid) %>%
mutate(Upreg.Ven.vs.NonVen = ifelse(txid %in% Ven.vs.NonVen.up$txid,T,F)) %>%
# mutate(SEassociated = ifelse(txid %in% se.genes$txid,T,F)) %>%
left_join(tf.all,by='txid') %>%
select(-longid) %>%
unique()
tf.reformat <- tf.normCounts %>%
select(X1,id.y) %>%
mutate(cvvID = str_split_fixed(X1,'_',2)[,2]) %>%
select(cvvID,tfID = id.y)
View(tf.normCounts)
View(tf.reformat)
View(tf.normCounts)
library(tidyverse)
library(pheatmap)
library(viridis)
##
## Analyses to identify candidate TFs involved in the regulation of venom genes.
##
'%!in%' <- function(x,y)!('%in%'(x,y))
##
# Read in longID to transcript ID table
longID.to.txID <- read_tsv('./data/annotation/CroVir_rnd1.all.maker.annotation_table.final.txt',col_names = F) %>%
select(longid = 1, txid = 2) %>%
mutate(longid = str_remove_all(longid, '-mRNA-1'))
# Read in normalized counts
all.normCounts <- read_csv('./analysis/1_gene_expression/norm_counts/CvvVenomReg_RepRNAseq_wNonVen_VSTNormCounts_08.02.21.csv') %>%
mutate(txid = str_split_fixed(X1,'_',2)[,2]) %>%
mutate(id = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(id = ifelse(id=='Venom',str_split_fixed(X1,'-',3)[,3],id))
# Read in pairwise result tables from DEseq2 and filter for significantly upregulated genes
Ven.vs.NonVen.pw <- read_csv('./analysis/1_gene_expression/pairwise_results/cvv_Venom.vs.NonVenom_VG_PairwiseResult_08.02.21.csv') %>%
filter(IHW_pvalue < 0.05) %>%
filter(IHW_pvalue < 0.05) %>%
mutate(direction = ifelse(log2FoldChange > 0, 'Up','Down')) %>%
mutate(txid = str_split_fixed(X1,'_',2)[,2]) %>%
mutate(id = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(id = ifelse(id=='Venom',str_split_fixed(X1,'-',3)[,3],id))
Ven.vs.NonVen.up <- Ven.vs.NonVen.pw %>% filter(direction == 'Up' & log2FoldChange > 1)
Ven.vs.NonVen.down <- Ven.vs.NonVen.pw %>% filter(direction == 'Down' & log2FoldChange < -1)
# Read in TF lists
tf.dnaBinding <- read_tsv('./data/annotation/TF_lists/Cvv_TF.DNABinding.txt',col_names = F) %>%
mutate(type = 'DNA Binding') %>%
select(longid=1,id=3, type)
tf.protBinding <- read_tsv('./data/annotation/TF_lists/Cvv_TF.ProtBinding.txt',col_names = F) %>%
mutate(type = 'Protein Binding') %>%
select(longid=1,id=2, type)
tf.coreg <- read_tsv('./data/annotation/TF_lists/Cvv_TF.Coregulators.txt',col_names = F) %>%
mutate(type = 'Coregulator') %>%
select(longid=1,id=2, type)
# Combine all TF tables and add T/F columns for the three types
tf.all <- tf.dnaBinding %>%
bind_rows(tf.protBinding) %>%
bind_rows(tf.coreg) %>%
left_join(longID.to.txID) %>%
select(longid,txid,id) %>%
unique() %>%
mutate(DnaBinding = ifelse(longid %in% tf.dnaBinding$longid,T,F)) %>%
mutate(ProtBinding = ifelse(longid %in% tf.protBinding$longid,T,F)) %>%
mutate(Coregulator = ifelse(longid %in% tf.coreg$longid,T,F))
se.genes <- read_tsv('./analysis/2_super_enhancers/SEtoGene_Association/Cvv_SEassocPairs_Genes.bed',col_names = F) %>%
mutate(longid = str_split_fixed(X4,'=',3)[,2]) %>%
mutate(longid = str_remove_all(longid,';Name')) %>%
left_join(longID.to.txID)
tf.normCounts <- all.normCounts %>%
filter(txid %in% tf.all$txid) %>%
mutate(Upreg.Ven.vs.NonVen = ifelse(txid %in% Ven.vs.NonVen.up$txid,T,F)) %>%
# mutate(SEassociated = ifelse(txid %in% se.genes$txid,T,F)) %>%
left_join(tf.all,by='txid') %>%
select(-longid) %>%
unique()
tf.reformat <- tf.normCounts %>%
select(X1,id.y) %>%
mutate(cvvID = str_split_fixed(X1,'_',2)[,2]) %>%
select(cvvID,tfID = id.y)
upreg.TFs <- tf.normCounts %>% filter(Upreg.Ven.vs.NonVen)
upreg.TFs.pw <- Ven.vs.NonVen.up %>% filter(X1 %in% upreg.TFs$X1)
write_csv(upreg.TFs,'./analysis/3_transcription_factors/UpregulatedTFs_08.02.21.csv')
upreg.TFs.heatdata <- as.data.frame(upreg.TFs[,c(3,7,8,2,4,5,6,9,10,11,12)])
row.names(upreg.TFs.heatdata) <- upreg.TFs$id.y
upreg.TFs.annot <- as.data.frame(upreg.TFs[,c(17:19)]*1)
row.names(upreg.TFs.annot) <- upreg.TFs$id.y
pheatmap(upreg.TFs.heatdata,
cluster_cols = F,
scale='none',
color=viridis(50),
border_color = NA,
treeheight_row = 10,
cellwidth = 10,
cellheight = 10,
main = 'Upregulated TFs',
annotation_row = upreg.TFs.annot,
gaps_col = 3,
# filename='./figures/fig_pieces/Upreg_TFheatmap_02.12.21.pdf'
)
View(upreg.TFs)
upreg.TFs.heatdata <- as.data.frame(upreg.TFs[,c(3,7,8,2,4,5,6,9,10)])
row.names(upreg.TFs.heatdata) <- upreg.TFs$id.y
upreg.TFs.heatdata <- as.data.frame(upreg.TFs[,c(4,8,9,2,3,5,6,7,10)])
row.names(upreg.TFs.heatdata) <- upreg.TFs$id.y
tf.normCounts <- all.normCounts %>%
filter(txid %in% tf.all$txid) %>%
mutate(Upreg.Ven.vs.NonVen = ifelse(txid %in% Ven.vs.NonVen.up$txid,T,F)) %>%
mutate(SEassociated = ifelse(txid %in% se.genes$txid,T,F)) %>%
left_join(tf.all,by='txid') %>%
select(-longid) %>%
unique()
View(tf.normCounts)
tf.reformat <- tf.normCounts %>%
select(X1,id.y) %>%
mutate(cvvID = str_split_fixed(X1,'_',2)[,2]) %>%
select(cvvID,tfID = id.y)
upreg.TFs <- tf.normCounts %>% filter(Upreg.Ven.vs.NonVen)
upreg.TFs.pw <- Ven.vs.NonVen.up %>% filter(X1 %in% upreg.TFs$X1)
write_csv(upreg.TFs,'./analysis/3_transcription_factors/UpregulatedTFs_08.02.21.csv')
upreg.TFs.heatdata <- as.data.frame(upreg.TFs[,c(4,8,9,2,3,5,6,7,10)])
row.names(upreg.TFs.heatdata) <- upreg.TFs$id.y
upreg.TFs.annot <- as.data.frame(upreg.TFs[,c(13:14)]*1)
row.names(upreg.TFs.annot) <- upreg.TFs$id.y
pheatmap(upreg.TFs.heatdata,
cluster_cols = F,
scale='none',
color=viridis(50),
border_color = NA,
treeheight_row = 10,
cellwidth = 10,
cellheight = 10,
main = 'Upregulated TFs',
annotation_row = upreg.TFs.annot,
gaps_col = 3,
# filename='./figures/fig_pieces/Upreg_TFheatmap_02.12.21.pdf'
)
pheatmap(upreg.TFs.heatdata,
cluster_cols = F,
scale='none',
color=viridis(50),
border_color = NA,
treeheight_row = 10,
cellwidth = 6,
cellheight = 6,
main = 'Upregulated TFs',
annotation_row = upreg.TFs.annot,
gaps_col = 3,
# filename='./figures/fig_pieces/Upreg_TFheatmap_02.12.21.pdf'
)
upreg.TFs.annot <- as.data.frame(upreg.TFs[,c(14,16:18)]*1)
row.names(upreg.TFs.annot) <- upreg.TFs$id.y
pheatmap(upreg.TFs.heatdata,
cluster_cols = F,
scale='none',
color=viridis(50),
border_color = NA,
treeheight_row = 10,
cellwidth = 6,
cellheight = 6,
main = 'Upregulated TFs',
annotation_row = upreg.TFs.annot,
gaps_col = 3,
# filename='./figures/fig_pieces/Upreg_TFheatmap_02.12.21.pdf'
)
pheatmap(upreg.TFs.heatdata,
cluster_cols = F,
scale='none',
color=viridis(50),
border_color = NA,
treeheight_row = 10,
cellwidth = 7,
cellheight = 7,
main = 'Upregulated TFs',
annotation_row = upreg.TFs.annot,
gaps_col = 3,
# filename='./figures/fig_pieces/Upreg_TFheatmap_02.12.21.pdf'
)
pheatmap(upreg.TFs.heatdata,
cluster_cols = F,
scale='none',
color=viridis(50),
border_color = NA,
treeheight_row = 10,
cellwidth = 7,
cellheight = 7,
main = 'Upregulated TFs',
fontsize = 6,
annotation_row = upreg.TFs.annot,
gaps_col = 3,
# filename='./figures/fig_pieces/Upreg_TFheatmap_02.12.21.pdf'
)
View(tf.normCounts)
View(Ven.vs.NonVen.up)
upreg.TFs.pw <- Ven.vs.NonVen.up %>% filter(X1 %in% upreg.TFs$X1) %>% filter(log2FoldChange > 1)
View(upreg.TFs.pw)
upreg.TFs.pw <- Ven.vs.NonVen.up %>% filter(X1 %in% upreg.TFs$X1)
write_csv(upreg.TFs,'./analysis/3_transcription_factors/UpregulatedTFs_08.02.21.csv')
upreg.TFs.heatdata <- as.data.frame(upreg.TFs[,c(4,8,9,2,3,5,6,7,10)])
row.names(upreg.TFs.heatdata) <- upreg.TFs$id.y
upreg.TFs.annot <- as.data.frame(upreg.TFs[,c(14,16:18)]*1)
row.names(upreg.TFs.annot) <- upreg.TFs$id.y
pheatmap(upreg.TFs.heatdata,
cluster_cols = F,
scale='none',
color=viridis(50),
border_color = NA,
treeheight_row = 10,
cellwidth = 7,
cellheight = 7,
main = 'Upregulated TFs',
fontsize = 6,
annotation_row = upreg.TFs.annot,
gaps_col = 3,
# filename='./figures/fig_pieces/Upreg_TFheatmap_02.12.21.pdf'
)
sum(upreg.TFs$X1 %in% Ven.vs.NonVen.up$X1)
upreg.TFs.top10 <- upreg.TFs %>% left_join(Unext.vs.ODPE.pw) %>% top_n(n=10,wt=log2FoldChange)
seAssoc.TFs <- tf.normCounts %>% filter(SEassociated)
seAssoc.TFs.heatdata <- as.data.frame(seAssoc.TFs[,c(4,8,9,2,3,5,6,7,10)])
row.names(seAssoc.TFs.heatdata) <- seAssoc.TFs$id.y
seAssoc.TFs.annot <- as.data.frame(seAssoc.TFs[,16:18]*1)
row.names(seAssoc.TFs.annot) <- seAssoc.TFs$id.y
pheatmap(seAssoc.TFs.heatdata,
cluster_cols = F,
scale='row',
color=viridis(50),
border_color = NA,
treeheight_row = 10,
cellwidth = 10,
cellheight = 10,
main = 'SE-Associated TFs',
annotation_row = seAssoc.TFs.annot,
gaps_col = 12,
# filename='./figures/fig_pieces/SEassoc_TFheatmap_02.12.21.pdf'
)
pheatmap(seAssoc.TFs.heatdata,
cluster_cols = F,
scale='row',
color=viridis(50),
border_color = NA,
treeheight_row = 10,
cellwidth = 10,
cellheight = 10,
main = 'SE-Associated TFs',
annotation_row = seAssoc.TFs.annot,
gaps_col = 3,
# filename='./figures/fig_pieces/SEassoc_TFheatmap_02.12.21.pdf'
)
test <- (union(upreg.TFs$X1,seAssoc.TFs$X1))
both.upreg.SE.TFs <- tf.normCounts %>% filter(Upreg.Unext.vs.ODPE & SEassociated)
both.upreg.SE.TFs <- tf.normCounts %>% filter(Upreg.Ven.vs.NonVen & SEassociated)
both.upreg.SE.TFs.heatdata <- as.data.frame(both.upreg.SE.TFs[,c(4,8,9,2,3,5,6,7,10)])
row.names(both.upreg.SE.TFs.heatdata) <- both.upreg.SE.TFs$id.y
both.upreg.SE.TFs.annot <- as.data.frame(both.upreg.SE.TFs[,18:16]*1)
row.names(both.upreg.SE.TFs.annot) <- both.upreg.SE.TFs$id.y
pheatmap(both.upreg.SE.TFs.heatdata,
cluster_cols = F,
scale='row',
color=viridis(50),
border_color = NA,
treeheight_row = 10,
cellwidth = 10,
cellheight = 10,
main = 'Upregulated AND SE-Associated TFs',
annotation_row = both.upreg.SE.TFs.annot,
gaps_col = 3,
# filename='./figures/fig_pieces/bothUpregAndSE_TFheatmap_09.23.20.pdf'
)
write_csv(seAssoc.TFs,'./analysis/3_transcription_factors/SEassociatedTFs_08.03.21.csv')
