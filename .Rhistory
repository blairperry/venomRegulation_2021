mutate(type = ifelse(type == 'croMit','Consensus',type)) %>%
mutate(type = factor(type,levels = c('Consensus','Enhancer','Promoter','Other'))) %>%
mutate(region_start = str_split_fixed(X1,'_',6)[,5]) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
arrange(desc(type),desc(region_start)) %>%
mutate(X1 = factor(X1,levels = unique(.$X1))) %>%
mutate(tfbs_id = str_to_upper(tfbs_id)) %>%
left_join(tf.fams,by=c('tfbs_id'='tfbs')) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(group = str_split_fixed(clean_id,'_',2)[,1]) %>%
mutate(group = factor(group,levels = c('Cv1-hAT-Tip100 Consensus','Promoter','Enhancer','Other'))) %>%
arrange(group,X2) %>%
mutate(clean_id = factor(clean_id,levels = unique(.$clean_id)))
te.ms.tf.ali
te.ms.cons_score <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_consScore.txt',col_names = F)
te.ms.gaps <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_gaps.txt',col_names = F) %>%
# mutate(X1 = str_split_fixed(X1,'[::]',2)[,1]) %>%
mutate(X1 = str_replace_all(X1,'[.:;()]','_')) %>%
mutate(X1 = str_remove(X1,'hAT-Tip100__')) %>%
# mutate(X1 = factor(X1,levels=te.ms.upgma$id)) %>%
unique() %>%
mutate(X2 = X2 - 1, X3 = X3 + 1) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
mutate(X1 = factor(X1,levels = unique(te.ms.tf.ali$X1))) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(group = str_split_fixed(clean_id,'_',2)[,1]) %>%
mutate(group = factor(group,levels = c('Cv1-hAT-Tip100 Consensus','Promoter','Enhancer','Other'))) %>%
arrange(group,X2) %>%
mutate(clean_id = factor(clean_id,levels = unique(.$clean_id)))
te.ms.splits <- te.ms.tf.ali %>%
filter(str_detect(X4,'split')) %>%
mutate(split_num = str_split_fixed(X4,'_',2)[,2]) %>%
group_by(X1,X5,X6) %>%
mutate(split_start = min(X3), split_end = max(X2)) %>%
select(tfbs=tfbs_id,split_start,split_end,X8,clean_id,group) %>%
unique()
te.enh.cand_tfs <- read_tsv('analysis/6_ABC_Enhancers/_tfbs_analysis/_core_vPERs/SVSP/SVSP.boundTFs.tsv') %>%
select(tfbs_id) %>%
unique()
te.prom.cand_tfs <- read_tsv('analysis/5_promoters/_tfbs_analysis/allBoundTFBS_Promoters_08.24.21.tsv') %>%
filter(vgfamily == 'SVSP') %>%
select(tfbs_id) %>%
unique()
te.all.cand_tfs <- te.enh.cand_tfs %>%
bind_rows(te.prom.cand_tfs) %>%
unique()
focal.tf.ali <- te.ms.tf.ali %>%
filter(tfbs_id %in% str_to_upper(te.all.cand_tfs$tfbs_id))
focal.splits <- te.ms.splits %>%
filter(tfbs %in% te.all.cand_tfs$tfbs_id)
focal.gaps <- te.ms.gaps %>%
filter(X1 %in% focal.tf.ali$X1)
p.align <- ggplot(focal.tf.ali,aes(x=X2,xend=X3,y=clean_id,yend=clean_id,color=family)) +
geom_segment(inherit.aes = F,aes(y=clean_id,yend=clean_id,x=0,xend=max(te.ms.cons_score$X1+20)),lwd=0.75,color='grey70') +
geom_segment(data=focal.gaps,inherit.aes = F,aes(x=X2,xend=X3,y=clean_id,yend=clean_id),color='white',lwd=2,alpha=0.85) +
geom_segment(alpha=0.5,lwd=4) +
ylab('')+
xlab('Relative Position') +
coord_cartesian(xlim =c(0,max(te.ms.tf.ali$X3)),clip = 'on',expand = T)+
# scale_y_continuous(position = 'right',limits = c(-abs(max(te.ms.tf.ali$X6)*1.2),abs(max(te.ms.tf.ali$X6)*1.2))) +
theme_classic() +
theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),
legend.position = 'left',
strip.text.y.left = element_text(angle = 0,color='black',face = 'bold'),
axis.title.x = element_blank(),
axis.text.y=element_text(size=8),
strip.background = element_rect(fill='grey90',size = 0.5),
panel.spacing = unit(0.25, "lines"))
p.align
te.ms.tf.ali <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_alignTFBS.txt',col_names = F) %>%
mutate(tfbs_id = str_split_fixed(X4,'_',2)[,1])%>%
mutate(X1 = str_replace_all(X1,'[.:;()]','_')) %>%
mutate(X1 = str_remove(X1,'hAT-Tip100__')) %>%
# mutate(X1 = factor(X1,levels=te.ms.upgma$id)) %>%
unique() %>%
mutate(type = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(type = ifelse(type == 'croMit','Consensus',type)) %>%
mutate(type = factor(type,levels = c('Consensus','Enhancer','Promoter','Other'))) %>%
mutate(region_start = str_split_fixed(X1,'_',6)[,5]) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
arrange(desc(type),desc(region_start)) %>%
mutate(X1 = factor(X1,levels = unique(.$X1))) %>%
mutate(tfbs_id = str_to_upper(tfbs_id)) %>%
left_join(tf.fams,by=c('tfbs_id'='tfbs')) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(group = str_split_fixed(clean_id,'_',2)[,1]) %>%
mutate(group = factor(group,levels = c('Cv1-hAT-Tip100 Consensus','Promoter','Enhancer','Other'))) %>%
arrange(desc(group),X2) %>%
mutate(clean_id = factor(clean_id,levels = unique(.$clean_id)))
te.ms.cons_score <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_consScore.txt',col_names = F)
te.ms.gaps <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_gaps.txt',col_names = F) %>%
# mutate(X1 = str_split_fixed(X1,'[::]',2)[,1]) %>%
mutate(X1 = str_replace_all(X1,'[.:;()]','_')) %>%
mutate(X1 = str_remove(X1,'hAT-Tip100__')) %>%
# mutate(X1 = factor(X1,levels=te.ms.upgma$id)) %>%
unique() %>%
mutate(X2 = X2 - 1, X3 = X3 + 1) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
mutate(X1 = factor(X1,levels = unique(te.ms.tf.ali$X1))) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(group = str_split_fixed(clean_id,'_',2)[,1]) %>%
mutate(group = factor(group,levels = c('Cv1-hAT-Tip100 Consensus','Promoter','Enhancer','Other'))) %>%
arrange(desc(group),X2) %>%
mutate(clean_id = factor(clean_id,levels = unique(.$clean_id)))
te.ms.splits <- te.ms.tf.ali %>%
filter(str_detect(X4,'split')) %>%
mutate(split_num = str_split_fixed(X4,'_',2)[,2]) %>%
group_by(X1,X5,X6) %>%
mutate(split_start = min(X3), split_end = max(X2)) %>%
select(tfbs=tfbs_id,split_start,split_end,X8,clean_id,group) %>%
unique()
te.enh.cand_tfs <- read_tsv('analysis/6_ABC_Enhancers/_tfbs_analysis/_core_vPERs/SVSP/SVSP.boundTFs.tsv') %>%
select(tfbs_id) %>%
unique()
te.prom.cand_tfs <- read_tsv('analysis/5_promoters/_tfbs_analysis/allBoundTFBS_Promoters_08.24.21.tsv') %>%
filter(vgfamily == 'SVSP') %>%
select(tfbs_id) %>%
unique()
te.all.cand_tfs <- te.enh.cand_tfs %>%
bind_rows(te.prom.cand_tfs) %>%
unique()
focal.tf.ali <- te.ms.tf.ali %>%
filter(tfbs_id %in% str_to_upper(te.all.cand_tfs$tfbs_id))
focal.splits <- te.ms.splits %>%
filter(tfbs %in% te.all.cand_tfs$tfbs_id)
focal.gaps <- te.ms.gaps %>%
filter(X1 %in% focal.tf.ali$X1)
p.align <- ggplot(focal.tf.ali,aes(x=X2,xend=X3,y=clean_id,yend=clean_id,color=family)) +
geom_segment(inherit.aes = F,aes(y=clean_id,yend=clean_id,x=0,xend=max(te.ms.cons_score$X1+20)),lwd=0.75,color='grey70') +
geom_segment(data=focal.gaps,inherit.aes = F,aes(x=X2,xend=X3,y=clean_id,yend=clean_id),color='white',lwd=2,alpha=0.85) +
geom_segment(alpha=0.5,lwd=4) +
ylab('')+
xlab('Relative Position') +
coord_cartesian(xlim =c(0,max(te.ms.tf.ali$X3)),clip = 'on',expand = T)+
# scale_y_continuous(position = 'right',limits = c(-abs(max(te.ms.tf.ali$X6)*1.2),abs(max(te.ms.tf.ali$X6)*1.2))) +
theme_classic() +
theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),
legend.position = 'left',
strip.text.y.left = element_text(angle = 0,color='black',face = 'bold'),
axis.title.x = element_blank(),
axis.text.y=element_text(size=8),
strip.background = element_rect(fill='grey90',size = 0.5),
panel.spacing = unit(0.25, "lines"))
p.align
p.cons <- ggplot(te.ms.cons_score,aes(x=X1,y=X2)) +
geom_area(fill='dodgerblue3',alpha=0.5) +
scale_y_continuous(limits=c(0,1.1))+
coord_cartesian(xlim =c(0,max(te.ms.tf.ali$X3)),clip = 'on',expand = T)+
# scale_fill_continuous_sequential('Mint') +
ylab('Consensus Score') +
xlab('Relative Position')+
theme_linedraw() + theme(panel.grid.major.y = element_line(),panel.grid.minor = element_blank(),panel.grid.major.x = element_blank(),legend.position = 'left', axis.title.x = element_blank())
p.cons + p.align +plot_layout(heights = c(1,10),nrow = 2,ncol=1)
View(te.ms.tf.ali)
te.ms.tf.ali <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_alignTFBS.txt',col_names = F) %>%
mutate(tfbs_id = str_split_fixed(X4,'_',2)[,1])%>%
mutate(X1 = str_replace_all(X1,'[.:;()]','_')) %>%
mutate(X1 = str_remove(X1,'hAT-Tip100__')) %>%
# mutate(X1 = factor(X1,levels=te.ms.upgma$id)) %>%
unique() %>%
mutate(type = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(type = ifelse(type == 'croMit','Consensus',type)) %>%
mutate(type = factor(type,levels = c('Consensus','Enhancer','Promoter','Other'))) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
mutate(tfbs_id = str_to_upper(tfbs_id)) %>%
left_join(tf.fams,by=c('tfbs_id'='tfbs')) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(group = str_split_fixed(clean_id,'_',2)[,1]) %>%
mutate(group = factor(group,levels = c('Cv1-hAT-Tip100 Consensus','Promoter','Enhancer','Other'))) %>%
mutate(region_start = str_split_fixed(clean_id,'_',3)[,3])
View(te.ms.tf.ali)
te.ms.tf.ali <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_alignTFBS.txt',col_names = F) %>%
mutate(tfbs_id = str_split_fixed(X4,'_',2)[,1])%>%
mutate(X1 = str_replace_all(X1,'[.:;()]','_')) %>%
mutate(X1 = str_remove(X1,'hAT-Tip100__')) %>%
# mutate(X1 = factor(X1,levels=te.ms.upgma$id)) %>%
unique() %>%
mutate(type = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(type = ifelse(type == 'croMit','Consensus',type)) %>%
mutate(type = factor(type,levels = c('Consensus','Enhancer','Promoter','Other'))) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
mutate(tfbs_id = str_to_upper(tfbs_id)) %>%
left_join(tf.fams,by=c('tfbs_id'='tfbs')) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(group = str_split_fixed(clean_id,'_',2)[,1]) %>%
mutate(group = factor(group,levels = c('Cv1-hAT-Tip100 Consensus','Promoter','Enhancer','Other'))) %>%
mutate(region_start = str_split_fixed(clean_id,'_',3)[,3] %>% str_split_fixed('-',2)[,1]) %>%
arrange(desc(group),X2) %>%
mutate(clean_id = factor(clean_id,levels = unique(.$clean_id)))
te.ms.tf.ali <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_alignTFBS.txt',col_names = F) %>%
mutate(tfbs_id = str_split_fixed(X4,'_',2)[,1])%>%
mutate(X1 = str_replace_all(X1,'[.:;()]','_')) %>%
mutate(X1 = str_remove(X1,'hAT-Tip100__')) %>%
# mutate(X1 = factor(X1,levels=te.ms.upgma$id)) %>%
unique() %>%
mutate(type = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(type = ifelse(type == 'croMit','Consensus',type)) %>%
mutate(type = factor(type,levels = c('Consensus','Enhancer','Promoter','Other'))) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
mutate(tfbs_id = str_to_upper(tfbs_id)) %>%
left_join(tf.fams,by=c('tfbs_id'='tfbs')) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(group = str_split_fixed(clean_id,'_',2)[,1]) %>%
mutate(group = factor(group,levels = c('Cv1-hAT-Tip100 Consensus','Promoter','Enhancer','Other'))) %>%
mutate(region_start = str_split_fixed(clean_id,'[_-]',4)[,3]) %>%
arrange(desc(group),X2) %>%
mutate(clean_id = factor(clean_id,levels = unique(.$clean_id)))
View(te.ms.tf.ali)
te.ms.tf.ali <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_alignTFBS.txt',col_names = F) %>%
mutate(tfbs_id = str_split_fixed(X4,'_',2)[,1])%>%
mutate(X1 = str_replace_all(X1,'[.:;()]','_')) %>%
mutate(X1 = str_remove(X1,'hAT-Tip100__')) %>%
# mutate(X1 = factor(X1,levels=te.ms.upgma$id)) %>%
unique() %>%
mutate(type = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(type = ifelse(type == 'croMit','Consensus',type)) %>%
mutate(type = factor(type,levels = c('Consensus','Enhancer','Promoter','Other'))) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
mutate(tfbs_id = str_to_upper(tfbs_id)) %>%
left_join(tf.fams,by=c('tfbs_id'='tfbs')) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(group = str_split_fixed(clean_id,'_',2)[,1]) %>%
mutate(group = factor(group,levels = c('Cv1-hAT-Tip100 Consensus','Promoter','Enhancer','Other'))) %>%
mutate(region_start = str_split_fixed(clean_id,'[_-]',4)[,4]) %>%
arrange(desc(group),X2) %>%
mutate(clean_id = factor(clean_id,levels = unique(.$clean_id)))
te.ms.tf.ali <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_alignTFBS.txt',col_names = F) %>%
mutate(tfbs_id = str_split_fixed(X4,'_',2)[,1])%>%
mutate(X1 = str_replace_all(X1,'[.:;()]','_')) %>%
mutate(X1 = str_remove(X1,'hAT-Tip100__')) %>%
# mutate(X1 = factor(X1,levels=te.ms.upgma$id)) %>%
unique() %>%
mutate(type = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(type = ifelse(type == 'croMit','Consensus',type)) %>%
mutate(type = factor(type,levels = c('Consensus','Enhancer','Promoter','Other'))) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
mutate(tfbs_id = str_to_upper(tfbs_id)) %>%
left_join(tf.fams,by=c('tfbs_id'='tfbs')) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(group = str_split_fixed(clean_id,'_',2)[,1]) %>%
mutate(group = factor(group,levels = c('Cv1-hAT-Tip100 Consensus','Promoter','Enhancer','Other'))) %>%
mutate(region_start = str_split_fixed(clean_id,'[_-]',5)[,4]) %>%
arrange(desc(group),X2) %>%
mutate(clean_id = factor(clean_id,levels = unique(.$clean_id)))
te.ms.tf.ali <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_alignTFBS.txt',col_names = F) %>%
mutate(tfbs_id = str_split_fixed(X4,'_',2)[,1])%>%
mutate(X1 = str_replace_all(X1,'[.:;()]','_')) %>%
mutate(X1 = str_remove(X1,'hAT-Tip100__')) %>%
# mutate(X1 = factor(X1,levels=te.ms.upgma$id)) %>%
unique() %>%
mutate(type = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(type = ifelse(type == 'croMit','Consensus',type)) %>%
mutate(type = factor(type,levels = c('Consensus','Enhancer','Promoter','Other'))) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
mutate(tfbs_id = str_to_upper(tfbs_id)) %>%
left_join(tf.fams,by=c('tfbs_id'='tfbs')) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(group = str_split_fixed(clean_id,'_',2)[,1]) %>%
mutate(group = factor(group,levels = c('Cv1-hAT-Tip100 Consensus','Promoter','Enhancer','Other'))) %>%
mutate(region_start = as.numeric(str_split_fixed(clean_id,'[_-]',5)[,4])) %>%
arrange(desc(group),X2) %>%
mutate(clean_id = factor(clean_id,levels = unique(.$clean_id)))
te.ms.tf.ali <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_alignTFBS.txt',col_names = F) %>%
mutate(tfbs_id = str_split_fixed(X4,'_',2)[,1])%>%
mutate(X1 = str_replace_all(X1,'[.:;()]','_')) %>%
mutate(X1 = str_remove(X1,'hAT-Tip100__')) %>%
# mutate(X1 = factor(X1,levels=te.ms.upgma$id)) %>%
unique() %>%
mutate(type = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(type = ifelse(type == 'croMit','Consensus',type)) %>%
mutate(type = factor(type,levels = c('Consensus','Enhancer','Promoter','Other'))) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
mutate(tfbs_id = str_to_upper(tfbs_id)) %>%
left_join(tf.fams,by=c('tfbs_id'='tfbs')) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(group = str_split_fixed(clean_id,'_',2)[,1]) %>%
mutate(group = factor(group,levels = c('Cv1-hAT-Tip100 Consensus','Promoter','Enhancer','Other'))) %>%
mutate(region_start = as.numeric(str_split_fixed(clean_id,'[_-]',5)[,4])) %>%
arrange(desc(group),region_start) %>%
mutate(clean_id = factor(clean_id,levels = unique(.$clean_id)))
te.ms.tf.ali
te.ms.cons_score <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_consScore.txt',col_names = F)
te.ms.cons_score <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_consScore.txt',col_names = F)
te.ms.gaps <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_gaps.txt',col_names = F) %>%
# mutate(X1 = str_split_fixed(X1,'[::]',2)[,1]) %>%
mutate(X1 = str_replace_all(X1,'[.:;()]','_')) %>%
mutate(X1 = str_remove(X1,'hAT-Tip100__')) %>%
# mutate(X1 = factor(X1,levels=te.ms.upgma$id)) %>%
unique() %>%
mutate(X2 = X2 - 1, X3 = X3 + 1) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
mutate(X1 = factor(X1,levels = unique(te.ms.tf.ali$X1))) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(clean_id = factor(clean_id,levels = unique(te.ms.tf.ali$clean_id)))
te.ms.splits <- te.ms.tf.ali %>%
filter(str_detect(X4,'split')) %>%
mutate(split_num = str_split_fixed(X4,'_',2)[,2]) %>%
group_by(X1,X5,X6) %>%
mutate(split_start = min(X3), split_end = max(X2)) %>%
select(tfbs=tfbs_id,split_start,split_end,X8,clean_id,group) %>%
unique()
te.enh.cand_tfs <- read_tsv('analysis/6_ABC_Enhancers/_tfbs_analysis/_core_vPERs/SVSP/SVSP.boundTFs.tsv') %>%
select(tfbs_id) %>%
unique()
te.prom.cand_tfs <- read_tsv('analysis/5_promoters/_tfbs_analysis/allBoundTFBS_Promoters_08.24.21.tsv') %>%
filter(vgfamily == 'SVSP') %>%
select(tfbs_id) %>%
unique()
te.all.cand_tfs <- te.enh.cand_tfs %>%
bind_rows(te.prom.cand_tfs) %>%
unique()
focal.tf.ali <- te.ms.tf.ali %>%
filter(tfbs_id %in% str_to_upper(te.all.cand_tfs$tfbs_id))
focal.splits <- te.ms.splits %>%
filter(tfbs %in% te.all.cand_tfs$tfbs_id)
focal.gaps <- te.ms.gaps %>%
filter(X1 %in% focal.tf.ali$X1)
p.align <- ggplot(focal.tf.ali,aes(x=X2,xend=X3,y=clean_id,yend=clean_id,color=family)) +
geom_segment(inherit.aes = F,aes(y=clean_id,yend=clean_id,x=0,xend=max(te.ms.cons_score$X1+20)),lwd=0.75,color='grey70') +
geom_segment(data=focal.gaps,inherit.aes = F,aes(x=X2,xend=X3,y=clean_id,yend=clean_id),color='white',lwd=2,alpha=0.85) +
geom_segment(alpha=0.5,lwd=4) +
ylab('')+
xlab('Relative Position') +
coord_cartesian(xlim =c(0,max(te.ms.tf.ali$X3)),clip = 'on',expand = T)+
# scale_y_continuous(position = 'right',limits = c(-abs(max(te.ms.tf.ali$X6)*1.2),abs(max(te.ms.tf.ali$X6)*1.2))) +
theme_classic() +
theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),
legend.position = 'left',
strip.text.y.left = element_text(angle = 0,color='black',face = 'bold'),
axis.title.x = element_blank(),
axis.text.y=element_text(size=8),
strip.background = element_rect(fill='grey90',size = 0.5),
panel.spacing = unit(0.25, "lines"))
p.align
te.ms.tf.ali <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_alignTFBS.txt',col_names = F) %>%
mutate(tfbs_id = str_split_fixed(X4,'_',2)[,1])%>%
mutate(X1 = str_replace_all(X1,'[.:;()]','_')) %>%
mutate(X1 = str_remove(X1,'hAT-Tip100__')) %>%
# mutate(X1 = factor(X1,levels=te.ms.upgma$id)) %>%
unique() %>%
mutate(type = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(type = ifelse(type == 'croMit','Consensus',type)) %>%
mutate(type = factor(type,levels = c('Consensus','Enhancer','Promoter','Other'))) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
mutate(tfbs_id = str_to_upper(tfbs_id)) %>%
left_join(tf.fams,by=c('tfbs_id'='tfbs')) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(group = str_split_fixed(clean_id,'_',2)[,1]) %>%
mutate(group = factor(group,levels = c('Cv1-hAT-Tip100 Consensus','Promoter','Enhancer','Other'))) %>%
mutate(region_start = as.numeric(str_split_fixed(clean_id,'[_-]',5)[,4])) %>%
arrange(desc(group),desc(region_start)) %>%
mutate(clean_id = factor(clean_id,levels = unique(.$clean_id)))
te.ms.cons_score <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_consScore.txt',col_names = F)
te.ms.gaps <- read_tsv('./analysis/11_TEs/alignments/SVSP_FunctionalRegionTEOverlaps_wConsensus_seqs.mafftalign.singleLine_gaps.txt',col_names = F) %>%
# mutate(X1 = str_split_fixed(X1,'[::]',2)[,1]) %>%
mutate(X1 = str_replace_all(X1,'[.:;()]','_')) %>%
mutate(X1 = str_remove(X1,'hAT-Tip100__')) %>%
# mutate(X1 = factor(X1,levels=te.ms.upgma$id)) %>%
unique() %>%
mutate(X2 = X2 - 1, X3 = X3 + 1) %>%
mutate(X1 = str_remove(X1,'Cmitchellii_rnd-5_family-368#DNA/')) %>%
mutate(X1 = ifelse(str_detect(X1,'newConsensus'),'Cv1-hAT-Tip100 Consensus',X1)) %>%
mutate(X1 = factor(X1,levels = unique(te.ms.tf.ali$X1))) %>%
mutate(clean_id = str_split_fixed(X1,'__',2)[,1] %>% str_remove_all('_R_')) %>%
mutate(clean_id = factor(clean_id,levels = unique(te.ms.tf.ali$clean_id)))
te.ms.splits <- te.ms.tf.ali %>%
filter(str_detect(X4,'split')) %>%
mutate(split_num = str_split_fixed(X4,'_',2)[,2]) %>%
group_by(X1,X5,X6) %>%
mutate(split_start = min(X3), split_end = max(X2)) %>%
select(tfbs=tfbs_id,split_start,split_end,X8,clean_id,group) %>%
unique()
# # Full Plot
# ggplot(te.ms.tf.ali %>% filter(str_detect(X1,'8924100',negate = T)),aes(x=X2,xend=X3,y=X1,yend=X1,color=tfbs_id)) +
#   # geom_segment(inherit.aes = F,data=te.ms.splits,aes(x=split_start,xend=split_end,y=X1,yend=X1,color=tfbs),lwd=0.25,alpha=0.75) +
#   geom_segment(alpha=0.65,lwd=3) +
#   # geom_segment(inherit.aes = F,aes(y=0,yend=0,x=0,xend=max(te.ms.cons_score$X1+20)),lwd=0.75,color='grey60') +
#   # geom_segment(data=te.ms.tf.ali,inherit.aes = F,aes(x=X2,xend=X3,y=0,yend=0),color='white',lwd=2,alpha=0.85) +
#   ylab('')+
#   xlab('Relative Position') +
#   coord_cartesian(xlim =c(0,max(te.ms.tf.ali$X3 + 15)),clip = 'on',expand = T)+
#   # scale_y_continuous(position = 'right',limits = c(-abs(max(te.ms.tf.ali$X6)*1.2),abs(max(te.ms.tf.ali$X6)*1.2))) +
#   theme_classic() +
#   theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),
#         legend.position = 'left',
#         strip.text.y.left = element_text(angle = 0,color='black',face = 'bold'),
#         axis.title.x = element_blank(),
#         axis.text.y=element_text(size=8),
#         strip.background = element_rect(fill='grey90',size = 0.5),
#         panel.spacing = unit(0.25, "lines"))
#
## Filtered plot based on TFs with enrichment in SVMP enhancers
te.enh.cand_tfs <- read_tsv('analysis/6_ABC_Enhancers/_tfbs_analysis/_core_vPERs/SVSP/SVSP.boundTFs.tsv') %>%
select(tfbs_id) %>%
unique()
te.prom.cand_tfs <- read_tsv('analysis/5_promoters/_tfbs_analysis/allBoundTFBS_Promoters_08.24.21.tsv') %>%
filter(vgfamily == 'SVSP') %>%
select(tfbs_id) %>%
unique()
te.all.cand_tfs <- te.enh.cand_tfs %>%
bind_rows(te.prom.cand_tfs) %>%
unique()
focal.tf.ali <- te.ms.tf.ali %>%
filter(tfbs_id %in% str_to_upper(te.all.cand_tfs$tfbs_id))
focal.splits <- te.ms.splits %>%
filter(tfbs %in% te.all.cand_tfs$tfbs_id)
focal.gaps <- te.ms.gaps %>%
filter(X1 %in% focal.tf.ali$X1)
p.align <- ggplot(focal.tf.ali,aes(x=X2,xend=X3,y=clean_id,yend=clean_id,color=family)) +
geom_segment(inherit.aes = F,aes(y=clean_id,yend=clean_id,x=0,xend=max(te.ms.cons_score$X1+20)),lwd=0.75,color='grey70') +
geom_segment(data=focal.gaps,inherit.aes = F,aes(x=X2,xend=X3,y=clean_id,yend=clean_id),color='white',lwd=2,alpha=0.85) +
geom_segment(alpha=0.5,lwd=4) +
ylab('')+
xlab('Relative Position') +
coord_cartesian(xlim =c(0,max(te.ms.tf.ali$X3)),clip = 'on',expand = T)+
# scale_y_continuous(position = 'right',limits = c(-abs(max(te.ms.tf.ali$X6)*1.2),abs(max(te.ms.tf.ali$X6)*1.2))) +
theme_classic() +
theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),
legend.position = 'left',
strip.text.y.left = element_text(angle = 0,color='black',face = 'bold'),
axis.title.x = element_blank(),
axis.text.y=element_text(size=8),
strip.background = element_rect(fill='grey90',size = 0.5),
panel.spacing = unit(0.25, "lines"))
p.align
p.cons <- ggplot(te.ms.cons_score,aes(x=X1,y=X2)) +
geom_area(fill='dodgerblue3',alpha=0.5) +
scale_y_continuous(limits=c(0,1.1))+
coord_cartesian(xlim =c(0,max(te.ms.tf.ali$X3)),clip = 'on',expand = T)+
# scale_fill_continuous_sequential('Mint') +
ylab('Consensus Score') +
xlab('Relative Position')+
theme_linedraw() + theme(panel.grid.major.y = element_line(),panel.grid.minor = element_blank(),panel.grid.major.x = element_blank(),legend.position = 'left', axis.title.x = element_blank())
p.cons + p.align +plot_layout(heights = c(1,10),nrow = 2,ncol=1)
p.align <- ggplot(focal.tf.ali,aes(x=X2,xend=X3,y=clean_id,yend=clean_id,color=family)) +
geom_segment(inherit.aes = F,aes(y=clean_id,yend=clean_id,x=0,xend=max(te.ms.cons_score$X1+20)),lwd=0.75,color='grey70') +
geom_segment(data=focal.gaps,inherit.aes = F,aes(x=X2,xend=X3,y=clean_id,yend=clean_id),color='white',lwd=2,alpha=0.85) +
geom_segment(alpha=0.35,lwd=4) +
ylab('')+
xlab('Relative Position') +
coord_cartesian(xlim =c(0,max(te.ms.tf.ali$X3)),clip = 'on',expand = T)+
# scale_y_continuous(position = 'right',limits = c(-abs(max(te.ms.tf.ali$X6)*1.2),abs(max(te.ms.tf.ali$X6)*1.2))) +
theme_classic() +
theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),
legend.position = 'left',
strip.text.y.left = element_text(angle = 0,color='black',face = 'bold'),
axis.title.x = element_blank(),
axis.text.y=element_text(size=8),
strip.background = element_rect(fill='grey90',size = 0.5),
panel.spacing = unit(0.25, "lines"))
p.align
p.cons <- ggplot(te.ms.cons_score,aes(x=X1,y=X2)) +
geom_area(fill='dodgerblue3',alpha=0.5) +
scale_y_continuous(limits=c(0,1.1))+
coord_cartesian(xlim =c(0,max(te.ms.tf.ali$X3)),clip = 'on',expand = T)+
# scale_fill_continuous_sequential('Mint') +
ylab('Consensus Score') +
xlab('Relative Position')+
theme_linedraw() + theme(panel.grid.major.y = element_line(),panel.grid.minor = element_blank(),panel.grid.major.x = element_blank(),legend.position = 'left', axis.title.x = element_blank())
p.cons + p.align +plot_layout(heights = c(1,10),nrow = 2,ncol=1)
library(tidyverse)
library(seqinr)
library(patchwork)
# Read and parse snake genom blast results --------------------------------
all.snakeBlast <- read_tsv('analysis/7_species_blasts/offline_snakeGenomeBlast/blast_results/allSpecies_coreVPER_BlastResults_08.24.21.txt',
col_names = c('qseqid', 'sseqid', 'pident', 'length', 'mismatch', 'gapopen', 'qstart', 'qend', 'sstart', 'send', 'evalue', 'bitscore', 'sseq','species')) %>%
mutate(species = str_split_fixed(species,'[_]',2)[,1])
all.snakeBlast
## Filter to include top 5 hits per species based on e-value first, and secondarily by bitscore for cases where more than 5 have identical lowest e-value
all.snakeBlast.top5 <- all.snakeBlast %>%
group_by(qseqid,species) %>%
top_n(n=5,wt = -evalue) %>%
top_n(n=5,wt = bitscore) %>%
filter(bitscore > 100)
all.snakeBlast.top5%>% group_by(qseqid) %>% tally()
descrip.ncbiBlast <- readxl::read_xlsx('analysis/7_species_blasts/ncbi_allSnakeBlast/CoreVPER_DescripTable_08.23.21.xlsx') %>% janitor::clean_names() %>%
mutate(scientific_name_temp1 = str_split_fixed(scientific_name,' ',3)[,1],
scientific_name_temp2 = str_split_fixed(scientific_name,' ',3)[,2],
scientific_name = paste(scientific_name_temp1,scientific_name_temp2,sep = '_')) %>%
select(accession,scientific_name,description)
all.snakeBlast.top5.svmp <- all.snakeBlast.top5 %>% filter(str_detect(qseqid,'SVMP')) %>% mutate(fasta_id = paste(sseqid,' ',sstart,'-',send,' ',species,sep = ''))
all.snakeBlast.top5.svsp <- all.snakeBlast.top5 %>% filter(str_detect(qseqid,'SVSP')) %>% mutate(fasta_id = paste(sseqid,' ',sstart,'-',send,' ',species,sep = ''))
all.snakeBlast.top5.pla2 <- all.snakeBlast.top5 %>% filter(str_detect(qseqid,'PLA2')) %>% mutate(fasta_id = paste(sseqid,' ',sstart,'-',send,' ',species,sep = ''))
View(all.snakeBlast.top5.pla2)
all.ncbiBlast <- read_csv('analysis/7_species_blasts/ncbi_allSnakeBlast/CoreVPER_FullResults_08.23.21.csv',col_names = c('qseqid', 'sseqid', 'pident', 'length', 'mismatch', 'gapopen', 'qstart', 'qend', 'sstart', 'send', 'evalue', 'bitscore')) %>%
left_join(descrip.ncbiBlast,by=c('sseqid'='accession'))
all.ncbiBlast.top5 <- all.ncbiBlast %>%
group_by(qseqid,scientific_name) %>%
top_n(n=5,wt = -evalue) %>%
top_n(n=5,wt = bitscore)%>%
filter(bitscore > 100) %>%
group_by(qseqid,scientific_name,sstart,send) %>%
mutate(fasta_id = paste(sseqid,':',min(c(sstart,send)),'-',max(c(sstart,send)),' ',description,sep = ''))
all.ncbiBlast.top5.svmp <- all.ncbiBlast.top5 %>% filter(str_detect(qseqid,'SVMP'))
all.ncbiBlast.top5.svsp <- all.ncbiBlast.top5 %>% filter(str_detect(qseqid,'SVSP'))
all.ncbiBlast.top5.pla2 <- all.ncbiBlast.top5 %>% filter(str_detect(qseqid,'PLA2'))
View(all.ncbiBlast.top5.pla2)
View(all.ncbiBlast.top5)
View(all.ncbiBlast)
