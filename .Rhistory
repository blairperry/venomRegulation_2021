<<<<<<< HEAD
ylab('VST Normalized Gene Expression')+
theme_bw() + theme(plot.title.position = 'plot',plot.title = element_text(face='bold'))
allGenes
venom.exp <- exp %>%
filter(exp$txID %in% venPriorityGenes$txid)
allVen <- ggplot(venom.exp,aes(x=ChIPsignal,y=avg1DPE,fill=ChIPsignal)) +
geom_boxplot(show.legend = F) +
geom_signif(comparisons = list(c("FALSE", "TRUE")),
map_signif_level = TRUE, textsize=4, tip_length = 0,vjust = 0.5 ) +
scale_fill_manual(values=c('FALSE'='grey','TRUE'='skyblue2')) +
# scale_y_continuous(limits=c(0,max(log10(venom.exp$avg1DPE+1)*1.2))) +
ggtitle('e) All Venom Genes') +
xlab('H3K4me3 Peak Near Promoter') +
theme_bw() + theme(axis.title.y = element_blank(),plot.title.position = 'plot',plot.title = element_text(face='bold'))
allVen
length(ovrlp$X1)
length(ovrlp$X1) / length(all.prom$X1)
library(tidyverse)
library(colorspace)
library(patchwork)
venomTxIDs <- read_tsv('/Users/perryb/Dropbox/CastoeLabFolder/projects/CVV_Gene_Regulation/_VenomGeneRegulation/data/venom_annotations/___PriorityVenomGenes_Sept2020/PriorityVenomGeneList_withNVPs_02.25.21.txt',col_names = c(
'chr','start','stop','long_name','messy_name','tx_id','short_name'
)) %>%
filter(str_detect(short_name, 'gII|ADAM',negate = T))
all.predics <- read_delim('./output/ABC_Output_Dec2020/Predictions/EnhancerPredictionsFull.txt',delim='\t') %>%
mutate(geneType = ifelse(TargetGene %in% venomTxIDs$tx_id,'Venom','NonVenom'))
library(tidyverse)
library(colorspace)
library(patchwork)
venomTxIDs <- read_tsv('./data/venom_annotation/PriorityVenomGenes_08.02.21.txt',col_names = c(
'chr','start','stop','long_name','messy_name','tx_id','short_name'
)) %>%
filter(str_detect(short_name, 'gII|ADAM',negate = T))
all.predics <- read_delim('./analysis/6_ABC_analysis/ABC_output/Predictions/EnhancerPredictionsFull.txt',delim='\t') %>%
mutate(geneType = ifelse(TargetGene %in% venomTxIDs$tx_id,'Venom','NonVenom'))
# highestExp <- read_tsv('../gene_expression/HighExpressed_VenGenes_10.14.20.tsv')
# Total number of unique enhancer sequences
all.predics %>%
select(name) %>%
unique() %>%
tally()
# Total number of unique genes
all.predics %>%
select(TargetGene) %>%
unique() %>%
tally()
# % of genic and intergenic PERs
all.predics %>%
select(name,class) %>%
unique() %>%
group_by(class) %>%
tally() %>%
mutate(n = n / sum(n))
# Median distance from gene
all.predics %>%
select(name,TargetGene,distance) %>%
unique() %>%
summarise(med.dist = median(distance))
# Median distance from gene
all.predics %>%
select(name,TargetGene,distance) %>%
unique() %>%
summarise(med.dist = median(distance))
geneStats <- read_delim('./analysis/6_ABC_analysis/ABC_output/Predictions/GenePredictionStats.txt',delim='\t') %>%
mutate(geneType = ifelse(TargetGene %in% venomTxIDs$tx_id,'Venom','NonVenom'))
geneStats %>%
group_by(geneIsExpressed) %>%
tally()
geneStats %>%
filter(geneIsExpressed == TRUE) %>%
mutate(PERs = ifelse(nDistalEnhancersPredicted > 0,1,0)) %>%
group_by(PERs) %>%
tally()
t <- geneStats %>%
filter(geneIsExpressed == TRUE) %>%
filter(nDistalEnhancersPredicted > 0)
mean(t$nDistalEnhancersPredicted)
venom.predics <- all.predics %>%
filter(geneType == 'Venom') %>%
left_join(venomTxIDs,by=c('TargetGene'='tx_id'))
geneStats %>%
group_by(chr,nDistalEnhancersPredicted) %>%
tally() %>%
ggplot(aes(x=nDistalEnhancersPredicted,y=n)) +
geom_bar(stat='identity',fill='dodgerblue4') +
scale_y_continuous(expand = c(0,0)) +
ylab('Frequency') +
xlab('# of Predicted Enhancers') +
ggtitle('Number of Enhancers Per Gene') +
theme_classic()
geneStats %>%
group_by(geneType,nDistalEnhancersPredicted) %>%
tally() %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(x=nDistalEnhancersPredicted,y=proportion)) +
geom_bar(stat='identity') +
facet_wrap(~geneType)+
ylab('Proportion') +
xlab('# of Predicted Enhancers') +
theme_classic()
View(venom.predics)
# Pie chart
p.pie <- geneStats %>%
mutate(simple_nEnhancers = ifelse(nDistalEnhancersPredicted >= 5, '>= 5',as.character(nDistalEnhancersPredicted))) %>%
mutate(simple_nEnhancers = factor(simple_nEnhancers,levels=c('0','1','2','3','4','>= 5'))) %>%
group_by(geneType,simple_nEnhancers) %>%
tally() %>%
mutate(proportion = n / sum(n)) %>%
ggplot(aes(x='',y=proportion,fill=simple_nEnhancers)) +
geom_bar(stat='identity',width = 1,color='white') +
scale_fill_discrete_sequential('lajolla') +
coord_polar('y',start = 0,direction = -1)+
facet_wrap(~geneType) +
labs(fill='Number of PERs per gene') +
theme_void(base_size = 16) + theme(legend.position = 'bottom')
p.pie
all.predics %>%
group_by(name,class) %>%
tally() %>%
ggplot(aes(x=n)) +
geom_histogram(fill='dodgerblue4',bins=40) +
ylab('Frequency') +
xlab('# of Genes per Enhancer') +
scale_x_continuous(limits=c(0,20)) +
theme_classic()
p.dens <- ggplot(all.predics,aes(x=distance)) +
geom_density(fill='grey',alpha=0.38) +
geom_vline(xintercept = median(all.predics$distance),lty=2) +
geom_text(aes(label=median(all.predics$distance),x=median(all.predics$distance),y=0.5),nudge_x = .2,check_overlap = T) +
geom_vline(xintercept = median(venom.predics$distance),lty=2,color='red') +
geom_text(aes(label=median(venom.predics$distance),x=median(venom.predics$distance),y=0.55),nudge_x = -.2,check_overlap = T,color='red') +
scale_x_log10(expand=c(0,0),labels = scales::comma) +
xlab('Distance between PER and gene (bp)') +
# scale_x_continuous(limits=c(0,50000)) +
scale_y_continuous(expand=c(0,0),limits=c(0,0.7)) +
theme_classic(base_size = 12)
ggplot(all.predics,aes(x=distance,y=geneType,fill=geneType)) +
geom_boxplot(alpha=0.38) +
geom_jitter() +
# geom_vline(xintercept = median(all.predics$distance),lty=2) +
# geom_text(aes(label=median(all.predics$distance),x=median(all.predics$distance),y=0.5),nudge_x = .2,check_overlap = T) +
# geom_vline(xintercept = median(venom.predics$distance),lty=2,color='red') +
# geom_text(aes(label=median(venom.predics$distance),x=median(venom.predics$distance),y=0.5),nudge_x = -.2,check_overlap = T,color='red') +
scale_x_log10(expand=c(0,0)) +
# scale_x_continuous(limits=c(0,50000)) +
# scale_y_continuous(expand=c(0,0),limits=c(0,0.6),labels = scales::comma) +
theme_classic()
p.pie / p.dens
ggplot(all.predics,aes(x=distance)) +
geom_density(fill='dodgerblue',alpha=0.38) +
geom_vline(xintercept = median(all.predics$distance),lty=2) +
geom_vline(xintercept = median(venom.predics$distance),lty=2) +
geom_text(aes(label=median(all.predics$distance),x=median(all.predics$distance),y=0.5),check_overlap = T) +
scale_x_log10(expand=c(0,0)) +
scale_y_continuous(expand=c(0,0),limits=c(0,0.7)) +
theme_classic()
# % of genic and intergenic PERs
venom.predics %>%
select(name,class) %>%
unique() %>%
group_by(class) %>%
tally() %>%
mutate(n = n / sum(n))
# Median distance from gene
venom.predics %>%
select(name,TargetGene,distance) %>%
unique() %>%
summarise(med.dist = median(distance))
venom.predics.simple <- venom.predics %>%
select(chr.x,start.x,end,TargetGene,short_name) %>%
mutate(newID1 = ifelse(str_detect(TargetGene,'SVMP|SVSP|PLA2'),str_remove(TargetGene,'crovir-transcript-'),paste(str_replace(TargetGene,'crovir-transcript-','cvt'),short_name,sep='-'))) %>%
group_by(chr.x,start.x,end) %>%
summarise(newID2 = paste(newID1,collapse ='.')) %>%
arrange(chr.x,start.x) %>%
rowid_to_column() %>%
mutate(newID3 = paste('PER',rowid,'_',newID2,sep = '')) %>%
select(chr.x,start.x,end,newID3)
mean(t$nDistalEnhancersPredicted)
#install.packages('gggenes')
library(gggenes)
library(viridis)
library(patchwork)
library(tidyverse)
library(scales)
pri_venom_genes <- read_tsv('./data/venom_annotation/PriorityVenomGenes_08.02.21.txt',col_names = F)
exp <- read_tsv('./analysis/1_gene_expression/norm_counts/AllGenes_1DPEAvgExpression_08.08.21.tsv',col_names = c('txid','Avg1DPE')) %>%
filter(txid %in% pri_venom_genes$X6) %>%
left_join(pri_venom_genes,by=c('txid'='X6')) %>%
mutate(gene = ifelse(str_detect(X7,'ADAM28',negate = T),str_replace_all(X7,'_',' '),X7))
all_info <- read_tsv('./data/annotation/CroVir_rnd1.all.maker.final.homologIDs.updatedNov2019.GeneEntriesOnly.gff',col_names = F) %>%
filter(str_detect(X9,'trnascan',negate = T)) %>%
mutate(tx_id = str_split_fixed(X9,';',4)[,3]) %>%
mutate(tx_id = str_remove_all(tx_id,'Crovir_Transcript_ID=')) %>%
filter(tx_id %in% pri_venom_genes$X6) %>%
left_join(pri_venom_genes,by=c('tx_id' = 'X6')) %>%
select(molecule = 1, gene = 16, start = 4, end = 5, strand = 7,tx_id) %>%
mutate(strand = ifelse(strand == '+','forward','reverse')) %>%
mutate(direction = ifelse(strand == 'forward',1,-1)) %>%
mutate(gene = ifelse(str_detect(gene,'ADAM28',negate = T),str_replace_all(gene,'_',' '),gene)) %>%
left_join(exp) %>%
mutate(gene = ifelse(str_detect(gene,'ADAM28'),paste('NVP: ',gene,sep = ''),gene)) %>%
mutate(prom_start = ifelse(strand=='forward',start,end))
# SVMP  -------------------------------------------------------------------
SVMP.info <- all_info %>%
filter(str_detect(gene,'SVMP|ADAM'))
SVMP.reg.start <- min(SVMP.info$start)-20000
SVMP.reg.end <- max(SVMP.info$end)+20000
SVMP.reg.length <- paste(c(round((SVMP.reg.end-SVMP.reg.start)/1000,digits = 2),'kb'),collapse = ' ')
# Read in ChIPseq
svmp.chip <- read_tsv('/Volumes/BlairPerry.Data1/__Cvv_Venom_Regulation/ChIP-seq/bw2bed/bed/venomScaffoldSubsets/H3K4me3_CroVir_i89_uniq_signal_mi1.bed',
col_names = c('chr','start','end','id','density')) %>%
filter(end >= SVMP.reg.start & start <= SVMP.reg.end)
svmp.chip.peaks <- read_tsv('/Volumes/BlairPerry.Data1/__Cvv_Venom_Regulation/ChIP-seq/AM_UTA_CTCF_H3K27Ac_H3K4me3_CSeq_34205/intervals_txt/H3K4me3_VenomGland_intervals_simple.bed',
col_names = c('chr','start','end','id')) %>%
filter(chr=='scaffold-mi1') %>%
filter(end >= SVMP.reg.start & start <= SVMP.reg.end)
# Read in ATACseq
svmp.atac.vg3 <- read_tsv('/Volumes/BlairPerry.Data1/__Cvv_Venom_Regulation/_newAnalysis_August2021/ATAC/6_deepTools/scaleFactorNorm/bedgraph/focal_scaffolds/allSampleMean.scaleFactorNorm_mi1.bedgraph',
col_names = c('chr','start','end','density')) %>%
filter(end >= SVMP.reg.start & start <= SVMP.reg.end)
svmp.atac.vg3.peaks <- read_tsv('analysis/4_atacseq/peak_regions/merged_peaks/allSample_mergedPeaks.bed',
col_names = c('chr','start','end','summit')) %>%
filter(chr=='scaffold-mi1') %>%
filter(end >= SVMP.reg.start & start <= SVMP.reg.end)
svmp.atac.vg3.peaks <- read_tsv('analysis/4_atacseq/peak_regions/merged_peaks/allSample_mergedPeaks.bed')
svmp.atac.vg3.peaks <- read_tsv('analysis/4_atacseq/peak_regions/merged_peaks/allSample_mergedPeaks.bed',
col_names = c('chr','start','end')) %>%
filter(chr=='scaffold-mi1') %>%
filter(end >= SVMP.reg.start & start <= SVMP.reg.end)
p.svmp.genes <- ggplot(SVMP.info,aes(xmin = start, xmax = end, y = str_remove(molecule,'scaffold\\-'), forward = direction, fill = log10avg1DPE)) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(gene,'SVMP')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = str_remove(molecule,'scaffold\\-'), label = gene), inherit.aes = F, nudge_y = 1,size=3) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(gene,'ADAM')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = str_remove(molecule,'scaffold\\-'), label = gene), inherit.aes = F, nudge_y = -0.5,size=3,color='grey40') +
geom_segment(aes(x=SVMP.reg.start,xend=SVMP.reg.end,y=str_remove(molecule,'scaffold\\-'),yend=str_remove(molecule,'scaffold\\-')),lwd=1,color='grey70') +
geom_gene_arrow(arrowhead_height = unit(5, "mm"), arrowhead_width = unit(2, "mm"),show.legend = F) +
ylab('') +
xlab('') +
ggtitle('SVMP\nTandem Array with Gene Expression at 1DPE') +
scale_fill_viridis_c(option = 'B') +
scale_x_continuous(labels = comma,limits=c(SVMP.reg.start,SVMP.reg.end),expand=c(0,0)) +
theme_classic(base_size = 14) +
theme(axis.line.y = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14),axis.title.x = element_blank())
p.svmp.genes
View(exp)
View(all_info)
p.svmp.genes <- ggplot(SVMP.info,aes(xmin = start, xmax = end, y = str_remove(molecule,'scaffold\\-'), forward = direction, fill = Avg1DPE)) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(gene,'SVMP')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = str_remove(molecule,'scaffold\\-'), label = gene), inherit.aes = F, nudge_y = 1,size=3) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(gene,'ADAM')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = str_remove(molecule,'scaffold\\-'), label = gene), inherit.aes = F, nudge_y = -0.5,size=3,color='grey40') +
geom_segment(aes(x=SVMP.reg.start,xend=SVMP.reg.end,y=str_remove(molecule,'scaffold\\-'),yend=str_remove(molecule,'scaffold\\-')),lwd=1,color='grey70') +
geom_gene_arrow(arrowhead_height = unit(5, "mm"), arrowhead_width = unit(2, "mm"),show.legend = F) +
ylab('') +
xlab('') +
ggtitle('SVMP\nTandem Array with Gene Expression at 1DPE') +
scale_fill_viridis_c(option = 'B') +
scale_x_continuous(labels = comma,limits=c(SVMP.reg.start,SVMP.reg.end),expand=c(0,0)) +
theme_classic(base_size = 14) +
theme(axis.line.y = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14),axis.title.x = element_blank())
p.svmp.genes
p.svmp.chip <- ggplot(svmp.chip,aes(x=start,xend=start,y=0,yend=density)) +
geom_segment(data = svmp.chip.peaks,aes(x=(start+end)/2,xend=(start+end)/2,y=0,yend=max(svmp.chip$density)*1.2),lwd=0.5,alpha=0.2) +
geom_segment(color='#2C8790') +
scale_x_continuous(labels = comma,limits=c(SVMP.reg.start,SVMP.reg.end),expand=c(0,0)) +
scale_y_continuous(limits=c(0,max(svmp.chip$density)*1.2)) +
ggtitle('ChIP-seq - H3K4me3') +
ylab('Read\nDensity') +
theme_classic(base_size = 14) + theme(axis.title.x = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14))
p.svmp.atac.vg3 <- ggplot(svmp.atac.vg3,aes(x=start,xend=start,y=0,yend=density)) +
geom_segment(data = svmp.atac.vg3.peaks,aes(x=(start+end)/2,xend=(start+end)/2,y=0,yend=max(svmp.atac.vg3$density)*1.2),lwd=0.5,alpha=0.2) +
geom_segment(color='#824029') +
scale_x_continuous(labels = comma,limits=c(SVMP.reg.start,SVMP.reg.end),expand=c(0,0)) +
scale_y_continuous(limits=c(0,max(svmp.atac.vg3$density)*1.2)) +
ggtitle('ATAC-seq - Post-Extraction VG') +
ylab('Read\nDensity') +
theme_classic(base_size = 14) + theme(axis.title.x = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14))
p.svmp.atac.vg3
p.svmp.scale <- ggplot(SVMP.info,aes(x=SVMP.reg.start,xend=SVMP.reg.end,y=0,yend=0)) +
geom_segment() +
geom_label(aes(x=mean(c(SVMP.reg.start,SVMP.reg.end)),label=SVMP.reg.length)) +
scale_x_continuous(labels = comma,limits=c(SVMP.reg.start,SVMP.reg.end),expand=c(0,0)) +
theme_void()
svmp.fullPlots <- p.svmp.genes / p.svmp.chip / p.svmp.atac.vg3 / p.svmp.atac.vgu + p.svmp.scale + plot_layout(ncol = 1,heights = c(1,1,1,1,0.5))
svmp.fullPlots <- p.svmp.genes / p.svmp.chip / p.svmp.atac.vg3  + p.svmp.scale + plot_layout(ncol = 1,heights = c(1,1,1,0.5))
svmp.fullPlots
p.svmp.atac.vg3 <- ggplot(svmp.atac.vg3,aes(x=start,xend=start,y=0,yend=density)) +
geom_segment(data = svmp.atac.vg3.peaks,aes(x=(start+end)/2,xend=(start+end)/2,y=0,yend=max(svmp.atac.vg3$density)*1.2),lwd=0.5,alpha=0.2) +
geom_segment(color='#824029') +
scale_x_continuous(labels = comma,limits=c(SVMP.reg.start,SVMP.reg.end),expand=c(0,0)) +
scale_y_continuous(limits=c(0,max(svmp.atac.vg3$density)*1.1)) +
ggtitle('ATAC-seq - Post-Extraction VG') +
ylab('Read\nDensity') +
theme_classic(base_size = 14) + theme(axis.title.x = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14))
p.svmp.atac.vg3
p.svmp.scale <- ggplot(SVMP.info,aes(x=SVMP.reg.start,xend=SVMP.reg.end,y=0,yend=0)) +
geom_segment() +
geom_label(aes(x=mean(c(SVMP.reg.start,SVMP.reg.end)),label=SVMP.reg.length)) +
scale_x_continuous(labels = comma,limits=c(SVMP.reg.start,SVMP.reg.end),expand=c(0,0)) +
theme_void()
svmp.fullPlots <- p.svmp.genes / p.svmp.chip / p.svmp.atac.vg3  + p.svmp.scale + plot_layout(ncol = 1,heights = c(1,1,1,0.5))
svmp.fullPlots
p.svmp.atac.vg3 <- ggplot(svmp.atac.vg3,aes(x=start,xend=start,y=0,yend=density)) +
geom_segment(data = svmp.atac.vg3.peaks,aes(x=(start+end)/2,xend=(start+end)/2,y=0,yend=max(svmp.atac.vg3$density)*1.2),lwd=0.5,alpha=0.2) +
geom_segment(color='#824029') +
scale_x_continuous(labels = comma,limits=c(SVMP.reg.start,SVMP.reg.end),expand=c(0,0)) +
scale_y_continuous(limits=c(0,max(svmp.atac.vg3$density)*1.2)) +
ggtitle('ATAC-seq - Post-Extraction VG') +
ylab('Read\nDensity') +
theme_classic(base_size = 14) + theme(axis.title.x = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14))
p.svmp.atac.vg3
p.svmp.scale <- ggplot(SVMP.info,aes(x=SVMP.reg.start,xend=SVMP.reg.end,y=0,yend=0)) +
geom_segment() +
geom_label(aes(x=mean(c(SVMP.reg.start,SVMP.reg.end)),label=SVMP.reg.length)) +
scale_x_continuous(labels = comma,limits=c(SVMP.reg.start,SVMP.reg.end),expand=c(0,0)) +
theme_void()
svmp.fullPlots <- p.svmp.genes / p.svmp.chip / p.svmp.atac.vg3  + p.svmp.scale + plot_layout(ncol = 1,heights = c(1,1,1,0.5))
svmp.fullPlots
svmp.atac.vg3.peaks <- read_tsv('analysis/4_atacseq/peak_regions/_atacPeaks_2orMoreSamples_08.05.21.bed',
col_names = c('chr','start','end')) %>%
filter(chr=='scaffold-mi1') %>%
filter(end >= SVMP.reg.start & start <= SVMP.reg.end)
svmp.atac.vg3.peaks <- read_tsv('analysis/4_atacseq/peak_regions/_atacPeaks_2orMoreSamples_08.05.21.bed')
svmp.atac.vg3.peaks <- read_tsv('analysis/4_atacseq/peak_regions/_atacPeaks_2orMoreSamples_08.05.21.bed',
col_names = c('chr','start','end','sample')) %>%
filter(chr=='scaffold-mi1') %>%
filter(end >= SVMP.reg.start & start <= SVMP.reg.end)
p.svmp.genes <- ggplot(SVMP.info,aes(xmin = start, xmax = end, y = str_remove(molecule,'scaffold\\-'), forward = direction, fill = Avg1DPE)) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(gene,'SVMP')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = str_remove(molecule,'scaffold\\-'), label = gene), inherit.aes = F, nudge_y = 1,size=3) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(gene,'ADAM')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = str_remove(molecule,'scaffold\\-'), label = gene), inherit.aes = F, nudge_y = -0.5,size=3,color='grey40') +
geom_segment(aes(x=SVMP.reg.start,xend=SVMP.reg.end,y=str_remove(molecule,'scaffold\\-'),yend=str_remove(molecule,'scaffold\\-')),lwd=1,color='grey70') +
geom_gene_arrow(arrowhead_height = unit(5, "mm"), arrowhead_width = unit(2, "mm"),show.legend = F) +
ylab('') +
xlab('') +
ggtitle('SVMP\nTandem Array with Gene Expression at 1DPE') +
scale_fill_viridis_c(option = 'B') +
scale_x_continuous(labels = comma,limits=c(SVMP.reg.start,SVMP.reg.end),expand=c(0,0)) +
theme_classic(base_size = 14) +
theme(axis.line.y = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14),axis.title.x = element_blank())
p.svmp.genes
p.svmp.chip <- ggplot(svmp.chip,aes(x=start,xend=start,y=0,yend=density)) +
geom_segment(data = svmp.chip.peaks,aes(x=(start+end)/2,xend=(start+end)/2,y=0,yend=max(svmp.chip$density)*1.2),lwd=0.5,alpha=0.2) +
geom_segment(color='#2C8790') +
scale_x_continuous(labels = comma,limits=c(SVMP.reg.start,SVMP.reg.end),expand=c(0,0)) +
scale_y_continuous(limits=c(0,max(svmp.chip$density)*1.2)) +
ggtitle('ChIP-seq - H3K4me3') +
ylab('Read\nDensity') +
theme_classic(base_size = 14) + theme(axis.title.x = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14))
p.svmp.atac.vg3 <- ggplot(svmp.atac.vg3,aes(x=start,xend=start,y=0,yend=density)) +
geom_segment(data = svmp.atac.vg3.peaks,aes(x=(start+end)/2,xend=(start+end)/2,y=0,yend=max(svmp.atac.vg3$density)*1.2),lwd=0.5,alpha=0.2) +
geom_segment(color='#824029') +
scale_x_continuous(labels = comma,limits=c(SVMP.reg.start,SVMP.reg.end),expand=c(0,0)) +
scale_y_continuous(limits=c(0,max(svmp.atac.vg3$density)*1.2)) +
ggtitle('ATAC-seq - Post-Extraction VG') +
ylab('Read\nDensity') +
theme_classic(base_size = 14) + theme(axis.title.x = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14))
p.svmp.atac.vg3
p.svmp.scale <- ggplot(SVMP.info,aes(x=SVMP.reg.start,xend=SVMP.reg.end,y=0,yend=0)) +
geom_segment() +
geom_label(aes(x=mean(c(SVMP.reg.start,SVMP.reg.end)),label=SVMP.reg.length)) +
scale_x_continuous(labels = comma,limits=c(SVMP.reg.start,SVMP.reg.end),expand=c(0,0)) +
theme_void()
svmp.fullPlots <- p.svmp.genes / p.svmp.chip / p.svmp.atac.vg3  + p.svmp.scale + plot_layout(ncol = 1,heights = c(1,1,1,0.5))
svmp.fullPlots
svsp.info <- all_info %>%
filter(str_detect(gene,'SVSP'))
svsp.reg.start <- min(svsp.info$start)-20000
svsp.reg.end <- max(svsp.info$end)+20000
svsp.reg.length <- paste(c(round((svsp.reg.end-svsp.reg.start)/1000,digits = 2),'kb'),collapse = ' ')
# Read in ChIPseq
svsp.chip <- read_tsv('/Volumes/BlairPerry.Data1/__Cvv_Venom_Regulation/ChIP-seq/bw2bed/bed/venomScaffoldSubsets/H3K4me3_CroVir_i89_uniq_signal_mi2.bed',
col_names = c('chr','start','end','id','density')) %>%
filter(end >= svsp.reg.start & start <= svsp.reg.end)
svsp.chip.peaks <- read_tsv('/Volumes/BlairPerry.Data1/__Cvv_Venom_Regulation/ChIP-seq/AM_UTA_CTCF_H3K27Ac_H3K4me3_CSeq_34205/intervals_txt/H3K4me3_VenomGland_intervals_simple.bed',
col_names = c('chr','start','end','id')) %>%
filter(chr=='scaffold-mi2') %>%
filter(end >= svsp.reg.start & start <= svsp.reg.end)
# Read in ATACseq
svsp.atac.vg3 <- read_tsv('/Volumes/BlairPerry.Data1/__Cvv_Venom_Regulation/_newAnalysis_August2021/ATAC/6_deepTools/scaleFactorNorm/bedgraph/focal_scaffolds/allSampleMean.scaleFactorNorm_mi2.bedgraph',
col_names = c('chr','start','end','density')) %>%
filter(end >= svsp.reg.start & start <= svsp.reg.end)
svsp.atac.vg3.peaks <- read_tsv('./analysis/4_atacseq/peak_regions/_atacPeaks_2orMoreSamples_08.05.21.bed',
col_names = c('chr','start','end','sample')) %>%
filter(chr=='scaffold-mi2') %>%
filter(end >= svsp.reg.start & start <= svsp.reg.end)
p.svsp.genes <- ggplot(svsp.info,aes(xmin = start, xmax = end, y = str_remove(molecule,'scaffold\\-'), forward = direction, fill = Avg1DPE)) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(gene,'SVSP')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = str_remove(molecule,'scaffold\\-'), label = gene), inherit.aes = F, nudge_y = 1,size=3) +
geom_segment(aes(x=svsp.reg.start,xend=svsp.reg.end,y=str_remove(molecule,'scaffold\\-'),yend=str_remove(molecule,'scaffold\\-')),lwd=1,color='grey70') +
geom_gene_arrow(arrowhead_height = unit(5, "mm"), arrowhead_width = unit(2, "mm"),show.legend = F) +
ylab('') +
xlab('') +
ggtitle('SVSP\nTandem Array with Gene Expression at 1DPE') +
scale_fill_viridis_c(option = 'B') +
scale_x_continuous(labels = comma,limits=c(svsp.reg.start,svsp.reg.end),expand=c(0,0)) +
theme_classic(base_size = 14) +
theme(axis.line.y = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14),axis.title.x = element_blank())
p.svsp.chip <- ggplot(svsp.chip,aes(x=start,xend=start,y=0,yend=density)) +
geom_segment(data = svsp.chip.peaks,aes(x=(start+end)/2,xend=(start+end)/2,y=0,yend=max(svsp.chip$density)*1.2),lwd=0.5,alpha=0.2) +
geom_segment(color='#2C8790') +
# geom_point(inherit.aes = F,
#            data=svsp.chip.peaks,
#            aes(x=(start+end)/2,y=max(svsp.chip$density)*1.1),
#            color='#2C8790',
#            pch=25,
#            size=2) +
scale_x_continuous(labels = comma,limits=c(svsp.reg.start,svsp.reg.end),expand=c(0,0)) +
scale_y_continuous(limits=c(0,max(svsp.chip$density)*1.2)) +
ggtitle('ChIP-seq - H3K4me3') +
ylab('Read\nDensity') +
theme_classic(base_size = 14) + theme(axis.title.x = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14))
p.svsp.atac.vg3 <- ggplot(svsp.atac.vg3,aes(x=start,xend=start,y=0,yend=density)) +
geom_segment(data = svsp.atac.vg3.peaks,aes(x=(start+end)/2,xend=(start+end)/2,y=0,yend=max(svsp.atac.vg3$density)*1.2),lwd=0.5,alpha=0.2) +
geom_segment(color='#824029') +
# geom_point(inherit.aes = F,
#            data=svsp.atac.vg3.peaks,
#            aes(x=(start+end)/2,y=max(svsp.atac.vg3$density)*1.1),
#            color='#824029',
#            pch=25,
#            size=2) +
scale_x_continuous(labels = comma,limits=c(svsp.reg.start,svsp.reg.end),expand=c(0,0)) +
scale_y_continuous(limits=c(0,max(svsp.atac.vg3$density)*1.2)) +
ggtitle('ATAC-seq - Post-Extraction VG') +
ylab('Read\nDensity') +
theme_classic(base_size = 14) + theme(axis.title.x = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14))
p.svsp.scale <- ggplot(svsp.info,aes(x=svsp.reg.start,xend=svsp.reg.end,y=0,yend=0)) +
geom_segment() +
geom_label(aes(x=mean(c(svsp.reg.end,svsp.reg.start)),label=svsp.reg.length)) +
scale_x_continuous(labels = comma,limits=c(svsp.reg.start,svsp.reg.end),expand=c(0,0)) +
theme_void()
svsp.fullPlots <- p.svsp.genes / p.svsp.chip / p.svsp.atac.vg3 + p.svsp.scale + plot_layout(ncol = 1,heights =c(1,1,1,1,0.5))
svsp.fullPlots
pla2.info <- all_info %>%
filter(str_detect(gene,'PLA2'))
pla2.reg.start <- min(pla2.info$start)-5000
pla2.reg.end <- max(pla2.info$end)+5000
pla2.reg.length <- paste(c(round((pla2.reg.end-pla2.reg.start)/1000,digits = 2),'kb'),collapse = ' ')
# Read in ChIPseq
pla2.chip <- read_tsv('/Volumes/BlairPerry.Data1/__Cvv_Venom_Regulation/ChIP-seq/bw2bed/bed/venomScaffoldSubsets/H3K4me3_CroVir_i89_uniq_signal_mi7.bed',
col_names = c('chr','start','end','id','density')) %>%
filter(end >= pla2.reg.start & start <= pla2.reg.end)
pla2.chip.peaks <- read_tsv('/Volumes/BlairPerry.Data1/__Cvv_Venom_Regulation/ChIP-seq/AM_UTA_CTCF_H3K27Ac_H3K4me3_CSeq_34205/intervals_txt/H3K4me3_VenomGland_intervals_simple.bed',
col_names = c('chr','start','end','id')) %>%
filter(chr=='scaffold-mi7') %>%
filter(end >= pla2.reg.start & start <= pla2.reg.end)
# Read in ATACseq
pla2.atac.vg3 <- read_tsv('/Volumes/BlairPerry.Data1/__Cvv_Venom_Regulation/_newAnalysis_August2021/ATAC/6_deepTools/scaleFactorNorm/bedgraph/focal_scaffolds/allSampleMean.scaleFactorNorm_mi7.bedgraph',
col_names = c('chr','start','end','density')) %>%
filter(end >= pla2.reg.start & start <= pla2.reg.end)
pla2.atac.vg3.peaks <- read_tsv('./analysis/4_atacseq/peak_regions/_atacPeaks_2orMoreSamples_08.05.21.bed',
col_names = c('chr','start','end','sample')) %>%
filter(chr=='scaffold-mi7') %>%
filter(end >= pla2.reg.start & start <= pla2.reg.end)
p.pla2.genes <- ggplot(pla2.info,aes(xmin = start, xmax = end, y = str_remove(molecule,'scaffold\\-'), forward = direction, fill = Avg1DPE)) +
ggrepel::geom_text_repel(data = all_info %>%
filter(str_detect(gene,'PLA2')) %>%
mutate(start = (start + end)/2),
aes(x = start, y = str_remove(molecule,'scaffold\\-'), label = gene), inherit.aes = F, nudge_y = 1,size=3) +
geom_segment(aes(x=pla2.reg.start,xend=pla2.reg.end,y=str_remove(molecule,'scaffold\\-'),yend=str_remove(molecule,'scaffold\\-')),lwd=1,color='grey70') +
geom_gene_arrow(arrowhead_height = unit(5, "mm"), arrowhead_width = unit(2, "mm"),show.legend = F) +
ylab('') +
xlab('') +
ggtitle('PLA2\nTandem Array with Gene Expression at 1DPE') +
scale_fill_viridis_c(option = 'B') +
scale_x_continuous(labels = comma,limits=c(pla2.reg.start,pla2.reg.end),expand=c(0,0)) +
theme_classic(base_size = 14) +
theme(axis.line.y = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14),axis.title.x = element_blank())
p.pla2.chip <- ggplot(pla2.chip,aes(x=start,xend=start,y=0,yend=density)) +
geom_rect(inherit.aes = F, data = pla2.chip.peaks,aes(xmin=start,xmax=end,ymin=0,ymax=max(pla2.chip$density)*1.2),lwd=0.5,alpha=0.2) +
geom_segment(color='#2C8790') +
scale_x_continuous(labels = comma,limits=c(pla2.reg.start,pla2.reg.end),expand=c(0,0)) +
scale_y_continuous(limits=c(0,max(pla2.chip$density)*1.2)) +
ggtitle('ChIP-seq - H3K4me3') +
ylab('Read\nDensity') +
theme_classic(base_size = 14) + theme(axis.title.x = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14))
p.pla2.atac.vg3 <- ggplot(pla2.atac.vg3,aes(x=start,xend=start,y=0,yend=density)) +
geom_rect(inherit.aes = F, data = pla2.atac.vg3.peaks,aes(xmin=start,xmax=end,ymin=0,ymax=max(pla2.atac.vg3$density)*1.2),lwd=0.5,alpha=0.2) +
geom_segment(color='#824029') +
scale_x_continuous(labels = comma,limits=c(pla2.reg.start,pla2.reg.end),expand=c(0,0)) +
scale_y_continuous(limits=c(0,max(pla2.atac.vg3$density)*1.2)) +
ggtitle('ATAC-seq - Post-Extraction VG') +
ylab('Read\nDensity') +
theme_classic(base_size = 14) + theme(axis.title.x = element_blank(),plot.title.position = 'plot',plot.title = element_text(color='black',face='bold',size = 14))
p.pla2.scale <- ggplot(pla2.info,aes(x=pla2.reg.start,xend=pla2.reg.end,y=0,yend=0)) +
geom_segment() +
geom_label(aes(x=mean(c(pla2.reg.end,pla2.reg.start)),label=pla2.reg.length)) +
scale_x_continuous(labels = comma,limits=c(pla2.reg.start,pla2.reg.end),expand=c(0,0)) +
theme_void()
pla2.fullPlots <- p.pla2.genes / p.pla2.chip / p.pla2.atac.vg3 / p.pla2.scale + plot_layout(ncol = 1,heights =c(1,1,1,0.5))
svmp.fullPlots | svsp.fullPlots | pla2.fullPlots
svsp.fullPlots <- p.svsp.genes / p.svsp.chip / p.svsp.atac.vg3 + p.svsp.scale + plot_layout(ncol = 1,heights =c(1,1,1,0.5))
svsp.fullPlots
svsp.fullPlots <- p.svsp.genes / p.svsp.chip / p.svsp.atac.vg3 / p.svsp.scale + plot_layout(ncol = 1,heights =c(1,1,1,0.5))
svsp.fullPlots
svmp.fullPlots | svsp.fullPlots | pla2.fullPlots
View(svmp.atac.vg3.peaks)
=======
circos.genomicAxis(h = "bottom", direction = "inside",labels.cex = 0.05)}
)
circos.genomicLabels(cvv.chroms, labels.column = 1, side = "inside",niceFacing = T,cex = 1,line_lwd = 0)
# circos.track(ylim = c(0, 1), panel.fun = function(x, y) {
#   chr = CELL_META$sector.index
#   xlim = CELL_META$xlim
#   ylim = CELL_META$ylim
#   circos.rect(xlim[1], 0, xlim[2], 1, col = c('green','white'))
#   circos.text(mean(xlim), mean(ylim), chr, cex = 0.7, col = "black",
#               facing = "inside", niceFacing = TRUE)
# }, track.height = 0.15, bg.border = NA)
circos.clear()
######
###### Run this whole block together each time
circos.par(start.degree=90,gap.degree=c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10))
circos.genomicInitialize(cvv.chroms,plotType = NULL)
circos.track(ylim = c(0, 1),
bg.col = cvv.chroms$color,
bg.border = 'black', track.height = 0.08,panel.fun = function(x, y) {
circos.genomicAxis(h = "bottom", direction = "inside",labels.cex = 0.5)}
)
circos.genomicLabels(cvv.chroms, labels.column = 1, side = "inside",niceFacing = T,cex = 1,line_lwd = 0)
# circos.track(ylim = c(0, 1), panel.fun = function(x, y) {
#   chr = CELL_META$sector.index
#   xlim = CELL_META$xlim
#   ylim = CELL_META$ylim
#   circos.rect(xlim[1], 0, xlim[2], 1, col = c('green','white'))
#   circos.text(mean(xlim), mean(ylim), chr, cex = 0.7, col = "black",
#               facing = "inside", niceFacing = TRUE)
# }, track.height = 0.15, bg.border = NA)
circos.clear()
######
cvv.exp <- read_tsv('analysis/1_gene_expression/norm_counts/CvvVenomReg_RepRNAseq_wNonVen_VSTNormCounts_08.02.21.csv')
cvv.exp <- read_csv('analysis/1_gene_expression/norm_counts/CvvVenomReg_RepRNAseq_wNonVen_VSTNormCounts_08.02.21.csv')
cvv.exp <- read_csv('analysis/1_gene_expression/norm_counts/CvvVenomReg_RepRNAseq_wNonVen_VSTNormCounts_08.02.21.csv') %>%
mutate(avg1DPE = rowMeans(.[,c(4,8,9)]))
View(cvv.exp)
cvv.exp <- read_csv('analysis/1_gene_expression/norm_counts/CvvVenomReg_RepRNAseq_wNonVen_VSTNormCounts_08.02.21.csv') %>%
mutate(avg1DPE = rowMeans(.[,c(4,8,9)])) %>%
select(txid = 1, avg1DPE)
cvv.exp <- read_csv('analysis/1_gene_expression/norm_counts/CvvVenomReg_RepRNAseq_wNonVen_VSTNormCounts_08.02.21.csv') %>%
mutate(avg1DPE = rowMeans(.[,c(4,8,9)])) %>%
select(txid = 1, avg1DPE) %>%
mutate(txid = str_split_fixed(txid,'[_]',2)[,2])
cvv.gff <- read_tsv('data/annotation/CroVir_rnd1.all.maker.final.homologIDs.updatedNov2019.GeneEntriesOnly.gff')
cvv.gff <- read_tsv('data/annotation/CroVir_rnd1.all.maker.final.homologIDs.updatedNov2019.GeneEntriesOnly.gff',col_names = F)
View(cvv.gff)
cvv.gff <- read_tsv('data/annotation/CroVir_rnd1.all.maker.final.homologIDs.updatedNov2019.GeneEntriesOnly.gff',col_names = F) %>%
select(chr=1,start=4,end=5,desc=9)
cvv.gff <- read_tsv('data/annotation/CroVir_rnd1.all.maker.final.homologIDs.updatedNov2019.GeneEntriesOnly.gff',col_names = F) %>%
select(chr=1,start=4,end=5,desc=9) %>%
mutate(txid = str_split_fixed(desc,'[;]',4)[,3])
cvv.gff <- read_tsv('data/annotation/CroVir_rnd1.all.maker.final.homologIDs.updatedNov2019.GeneEntriesOnly.gff',col_names = F) %>%
select(chr=1,start=4,end=5,desc=9) %>%
filter(str_detect(desc,'trnascan',negate = T)) %>%
mutate(txid = str_split_fixed(desc,'[;]',4)[,3])
cvv.gff <- read_tsv('data/annotation/CroVir_rnd1.all.maker.final.homologIDs.updatedNov2019.GeneEntriesOnly.gff',col_names = F) %>%
select(chr=1,start=4,end=5,desc=9) %>%
filter(str_detect(desc,'trnascan',negate = T)) %>%
mutate(txid = str_split_fixed(desc,'[;]',4)[,3]) %>%
mutate(txid = str_remove(txid,'Crovir_Transcript_ID=c'))
cvv.gff <- read_tsv('data/annotation/CroVir_rnd1.all.maker.final.homologIDs.updatedNov2019.GeneEntriesOnly.gff',col_names = F) %>%
select(chr=1,start=4,end=5,desc=9) %>%
filter(str_detect(desc,'trnascan',negate = T)) %>%
mutate(txid = str_split_fixed(desc,'[;]',4)[,3]) %>%
mutate(txid = str_remove(txid,'Crovir_Transcript_ID='))
cvv.gff <- read_tsv('data/annotation/CroVir_rnd1.all.maker.final.homologIDs.updatedNov2019.GeneEntriesOnly.gff',col_names = F) %>%
select(chr=1,start=4,end=5,desc=9) %>%
filter(str_detect(desc,'trnascan',negate = T)) %>%
mutate(txid = str_split_fixed(desc,'[;]',4)[,3]) %>%
mutate(txid = str_remove(txid,'Crovir_Transcript_ID=')) %>%
select(1,2,3,5)
cvv.exp.gff <- cvv.exp %>%
left_join(cvv.gff)
View(cvv.exp.gff)
cvv.exp.gff <- cvv.exp %>%
left_join(cvv.gff) %>%
select(chr,start,end,avg1DPE)
cvv.exp.gff <- cvv.exp %>%
left_join(cvv.gff) %>%
select(chr,start,end,avg1DPE) %>%
left_join(cvv.chroms,by=c('chr'='old_id'))
cvv.exp.gff <- cvv.exp %>%
left_join(cvv.gff) %>%
left_join(cvv.chroms,by=c('chr'='old_id'))
cvv.exp.gff <- cvv.exp %>%
left_join(cvv.gff) %>%
left_join(cvv.chroms,by=c('chr'='old_id')) %>%
select(chr = 6, start=4, end=5, avg1DPE)
circos.par(start.degree=90,gap.degree=c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10))
circos.genomicInitialize(cvv.chroms,plotType = NULL)
circos.track(ylim = c(0, 1),
bg.col = cvv.chroms$color,
bg.border = 'black', track.height = 0.08,panel.fun = function(x, y) {
circos.genomicAxis(h = "bottom", direction = "inside",labels.cex = 0.5)}
)
genomicLines(cvv.exp.gff)
circos.genomicLabels(cvv.chroms, labels.column = 1, side = "inside",niceFacing = T,cex = 1,line_lwd = 0)
# circos.track(ylim = c(0, 1), panel.fun = function(x, y) {
#   chr = CELL_META$sector.index
#   xlim = CELL_META$xlim
#   ylim = CELL_META$ylim
#   circos.rect(xlim[1], 0, xlim[2], 1, col = c('green','white'))
#   circos.text(mean(xlim), mean(ylim), chr, cex = 0.7, col = "black",
#               facing = "inside", niceFacing = TRUE)
# }, track.height = 0.15, bg.border = NA)
circos.clear()
######
###### Run this whole block together each time
circos.par(start.degree=90,gap.degree=c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10))
circos.genomicInitialize(cvv.chroms,plotType = NULL)
circos.track(ylim = c(0, 1),
bg.col = cvv.chroms$color,
bg.border = 'black', track.height = 0.08,panel.fun = function(x, y) {
circos.genomicAxis(h = "bottom", direction = "inside",labels.cex = 0.5)}
)
circos.genomicLines(cvv.exp.gff)
circos.genomicLines(cvv.exp.gff,value = cvv.exp.gff$avg1DPE)
circos.genomicLines(sector.index = cvv.exp.gff$chr,x=mean(c(cvv.exp.gff$start,cvv.exp.gff$end)),y = cvv.exp.gff$avg1DPE)
circos.genomicLines(region=cvv.exp.gff)
circos.genomicLines(region=cvv.exp.gff,value = 1)
###### Run this whole block together each time
circos.par(start.degree=90,gap.degree=c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10))
circos.genomicInitialize(cvv.chroms,plotType = NULL)
circos.track(ylim = c(0, 1),
bg.col = cvv.chroms$color,
bg.border = 'black', track.height = 0.08,panel.fun = function(x, y) {
circos.genomicAxis(h = "bottom", direction = "inside",labels.cex = 0.5)}
)
circos.genomicTrackPlotRegion(data, panel.fun = function(region, value, ...) {
circos.genomicPoints(region, value)
})
circos.genomicPoints(cvv.exp.gff, value)
circos.genomicPoints(cvv.exp.gff, cvv.exp.gff$avg1DPE)
circos.genomicTrackPlotRegion(cvv.exp.gff, panel.fun = function(region, value, ...) {
circos.genomicPoints(cvv.exp.gff, cvv.exp.gff$avg1DPE)
})
###### Run this whole block together each time
circos.par(start.degree=90,gap.degree=c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10))
circos.genomicInitialize(cvv.chroms,plotType = NULL)
circos.track(ylim = c(0, 1),
bg.col = cvv.chroms$color,
bg.border = 'black', track.height = 0.08,panel.fun = function(x, y) {
circos.genomicAxis(h = "bottom", direction = "inside",labels.cex = 0.5)}
)
circos.genomicTrackPlotRegion(cvv.exp.gff, panel.fun = function(region, value, ...) {
circos.genomicPoints(cvv.exp.gff, cvv.exp.gff$avg1DPE)
})
circos.genomicLabels(cvv.chroms, labels.column = 1, side = "inside",niceFacing = T,cex = 1,line_lwd = 0)
# circos.track(ylim = c(0, 1), panel.fun = function(x, y) {
#   chr = CELL_META$sector.index
#   xlim = CELL_META$xlim
#   ylim = CELL_META$ylim
#   circos.rect(xlim[1], 0, xlim[2], 1, col = c('green','white'))
#   circos.text(mean(xlim), mean(ylim), chr, cex = 0.7, col = "black",
#               facing = "inside", niceFacing = TRUE)
# }, track.height = 0.15, bg.border = NA)
circos.clear()
circos.par(start.degree=90,gap.degree=c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10))
circos.genomicInitialize(cvv.chroms,plotType = NULL)
circos.track(ylim = c(0, 1),
bg.col = cvv.chroms$color,
bg.border = 'black', track.height = 0.08,panel.fun = function(x, y) {
circos.genomicAxis(h = "bottom", direction = "inside",labels.cex = 0.5)}
)
circos.genomicTrackPlotRegion(cvv.exp.gff, panel.fun = function(region, value, ...) {
circos.genomicLines(cvv.exp.gff, cvv.exp.gff$avg1DPE)
})
circos.genomicLabels(cvv.chroms, labels.column = 1, side = "inside",niceFacing = T,cex = 1,line_lwd = 0)
# circos.track(ylim = c(0, 1), panel.fun = function(x, y) {
#   chr = CELL_META$sector.index
#   xlim = CELL_META$xlim
#   ylim = CELL_META$ylim
#   circos.rect(xlim[1], 0, xlim[2], 1, col = c('green','white'))
#   circos.text(mean(xlim), mean(ylim), chr, cex = 0.7, col = "black",
#               facing = "inside", niceFacing = TRUE)
# }, track.height = 0.15, bg.border = NA)
circos.clear()
######
library(tidyverse)
library(ggvenn)
install.packages("ggvenn")
library(ggvenn)
mergedPeaks <- read_tsv('analysis/4_atacseq/peak_regions/merged_peaks/mergedPeakIntersects.txt')
mergedPeaks <- read_tsv('analysis/4_atacseq/peak_regions/merged_peaks/mergedPeakIntersects.txt',col_names = F)
View(mergedPeaks)
mergedPeaks <- read_tsv('analysis/4_atacseq/peak_regions/merged_peaks/mergedPeakIntersects.txt',col_names = F) %>%
mutate(peakID = paste(1,2,3,sep = '_'))
mergedPeaks <- read_tsv('analysis/4_atacseq/peak_regions/merged_peaks/mergedPeakIntersects.txt',col_names = F) %>%
mutate(peakID = paste(X1,X2,X3,sep = '_'))
mergedPeaks <- read_tsv('analysis/4_atacseq/peak_regions/merged_peaks/mergedPeakIntersects.txt',col_names = F) %>%
mutate(peakID = paste(X1,X2,X3,sep = '_')) %>%
select(peakID, sample = 8)
mergedPeaks <- read_tsv('analysis/4_atacseq/peak_regions/merged_peaks/mergedPeakIntersects.txt',col_names = F) %>%
mutate(peakID = paste(X1,X2,X3,sep = '_')) %>%
select(peakID, sample = 8) %>%
mutate(sample = str_split_fixed(sample,'[_]',2)[,1])
mergedPeaks <- read_tsv('analysis/4_atacseq/peak_regions/merged_peaks/mergedPeakIntersects.txt',col_names = F) %>%
mutate(peakID = paste(X1,X2,X3,sep = '_')) %>%
select(peakID, sample = 8) %>%
mutate(sample = str_split_fixed(sample,'[_]',2)[,1]) %>%
unique()
rvg1.peaks <- mergedPeaks %>%
filter(sample == 'RVG1') %>%
select(peakID)
rvg4.peaks <- mergedPeaks %>%
filter(sample == 'RVG4') %>%
select(peakID)
rvg11.peaks <- mergedPeaks %>%
filter(sample == 'RVG11') %>%
select(peakID)
peak.overlap <- list('RVG1'=rvg1.peaks$peakID,'RVG4'=rvg4.peaks$peakID,'RVG11'=rvg11.peaks$peakID)
ggvenn(peak.overlap)
ggvenn(peak.overlap,fill_color = c('white'))
ggvenn(peak.overlap,fill_color = 'white')
ggvenn(peak.overlap,fill_color = c('white','grey','black'))
ggvenn(peak.overlap)
library(tidyverse)
library(ggvenn)
# a <- list(`Set 1` = c(1, 3, 5, 7, 9),
#           `Set 2` = c(1, 5, 9, 13),
#           `Set 3` = c(1, 2, 8, 9),
#           `Set 4` = c(6, 7, 10, 12))
# ggvenn(a, c("Set 1", "Set 2"))            # draw two-set venn
# ggvenn(a, c("Set 1", "Set 2", "Set 3"))   # draw three-set venn
# ggvenn(a)   # without set names, the first 4 elements in list will be chose to draw four-set venn
mergedPeaks <- read_tsv('analysis/4_atacseq/peak_regions/merged_peaks/mergedPeakIntersects.txt',col_names = F) %>%
mutate(peakID = paste(X1,X2,X3,sep = '_')) %>%
select(peakID, sample = 8) %>%
mutate(sample = str_split_fixed(sample,'[_]',2)[,1])
rvg1.peaks <- mergedPeaks %>%
filter(sample == 'RVG1') %>%
select(peakID)
rvg4.peaks <- mergedPeaks %>%
filter(sample == 'RVG4') %>%
select(peakID)
rvg11.peaks <- mergedPeaks %>%
filter(sample == 'RVG11') %>%
select(peakID)
ggvenn(peak.overlap,)
peak.overlap <- list('RVG1'=rvg1.peaks$peakID,'RVG4'=rvg4.peaks$peakID,'RVG11'=rvg11.peaks$peakID)
ggvenn(peak.overlap,)
focalPeaks <-
mergedPeaks %>%
group_by(peakID) %>%
tally()
View(focalPeaks)
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
tally() %>%
filter(n > 1)
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
tally() %>%
filter(n > 1) %>%
select(1)
View(focalPeaks)
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
# tally() %>%
# filter(n > 1) %>%
# select(1)
mutate(test = count())
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
# tally() %>%
# filter(n > 1) %>%
# select(1)
mutate(test = count(peakID))
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
# tally() %>%
# filter(n > 1) %>%
# select(1)
add_tally()
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
add_tally() %>%
?nest()
?nest()
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
add_tally() %>%
nest(peakID)
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
add_tally() %>%
nest(samples=sample)
View(focalPeaks)
focalPeaks %>% mutate(test = paste(samples,sep=','))
focalPeaks %>% mutate(test = paste(list(samples),sep=','))
focalPeaks %>% mutate(test = paste(as_list(samples),sep=','))
focalPeaks %>% mutate(test = paste(as.list(samples),sep=','))
focalPeaks %>% mutate(test = paste(samples[[1]],sep=','))
focalPeaks %>% mutate(test = paste(samples[[2]],sep=','))
focalPeaks %>% mutate(test = map_chr(samples, paste, collapse = ','))
focalPeaks %>% mutate(test = map(samples, paste, collapse = ','))
View(focalPeaks[[3]][[3]])
focalPeaks %>% mutate(test = map_chr(samples$sample, paste, collapse = ','))
focalPeaks %>% mutate(test = paste(samples$sample,collapse = ','))
focalPeaks %>% mutate(test = paste(samples$sample,sep = ','))
focalPeaks %>% mutate(test = paste(samples$sample,sep=','))
focalPeaks %>% mutate(test = paste(as.list(samples$sample),sep=','))
focalPeaks$samples
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
add_tally() %>%
# nest(samples=sample)
mutate(test = paste(sample,sep=','))
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
add_tally() %>%
# nest(samples=sample
group_by(peakID,n) %>%
mutate(test = paste(sample,sep=','))
head(focalPeaks)
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
add_tally() %>%
# nest(samples=sample
group_by(peakID,n) %>%
summarise(test = paste(sample,sep=','))
head(focalPeaks)
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
add_tally() %>%
# nest(samples=sample
group_by(peakID,n) %>%
summarise(test = paste(.$sample,sep=','))
head(focalPeaks)
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
add_tally() %>%
nest(samples=sample)
head(focalPeaks)
focalPeaks %>% mutate(test = map_chr(samples, ~ .[[1]] %>% str_c(collapse = ", ")))
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
add_tally() %>%
nest(sample_nest=sample) %>%
mutate(samples = map_chr(sample_nest, ~ .[[1]] %>% str_c(collapse = ","))) %>%
select(peakID,samples)
head(focalPeaks)
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
add_tally() %>%
nest(sample_nest=sample) %>%
mutate(samples = map_chr(sample_nest, ~ .[[1]] %>% str_c(collapse = "_"))) %>%
select(peakID,samples)
head(focalPeaks)
write_tsv(focalPeaks,'analysis/4_atacseq/peak_regions/_atacPeaks_2orMoreSamples_08.05.21.tsv')
focalPeaks <- mergedPeaks %>%
group_by(peakID) %>%
add_tally() %>%
nest(sample_nest=sample) %>%
mutate(samples = map_chr(sample_nest, ~ .[[1]] %>% str_c(collapse = "_"))) %>%
select(peakID,samples) %>%
separate(peakID,into = c('chr','start','end'),sep = '[_]')
head(focalPeaks)
write_tsv(focalPeaks,'analysis/4_atacseq/peak_regions/_atacPeaks_2orMoreSamples_08.05.21.tsv')
library(tidyverse)
overlaps <- read_tsv('./analysis/5_promoters/_PromoterATACPeaks/Overlap_FocalATACpeaks_PromWindows_08.09.21.txt',col_names = F) %>%
group_by(X7) %>%
mutate(multis = n())
overlaps.multi <- overlaps %>% filter(multis > 1)
# Number of genes w/ more than 1 ATAC-seq peak in promoter window
length(unique(overlaps.multi$X7))
overlaps.multi.plus <- overlaps.multi %>%
mutate(strand = str_split_fixed(X7,'[@]',2)[,1]) %>%
filter(strand == '#+') %>%
filter(X2 == max(X2))%>%
select(-multis,-strand)
overlaps.multi.minus <- overlaps.multi %>%
mutate(strand = str_split_fixed(X7,'[@]',2)[,1]) %>%
filter(strand == '#-') %>%
filter(X2 == min(X2)) %>%
select(-multis,-strand)
View(overlaps.multi.plus)
View(overlaps)
overlaps <- read_tsv('./analysis/5_promoters/_PromoterATACPeaks/Overlap_FocalATACpeaks_PromWindows_08.09.21.txt',col_names = F) %>%
select(-X4) %>%
group_by(X7) %>%
mutate(multis = n())
overlaps.multi <- overlaps %>% filter(multis > 1)
# Number of genes w/ more than 1 ATAC-seq peak in promoter window
length(unique(overlaps.multi$X7))
overlaps.multi.plus <- overlaps.multi %>%
mutate(strand = str_split_fixed(X7,'[@]',2)[,1]) %>%
filter(strand == '#+') %>%
filter(X2 == max(X2))%>%
select(-multis,-strand)
overlaps <- read_tsv('./analysis/5_promoters/_PromoterATACPeaks/Overlap_FocalATACpeaks_PromWindows_08.09.21.txt',col_names = F) %>%
select(-X4) %>%
group_by(X7) %>%
mutate(multis = n())
overlaps.multi <- overlaps %>% filter(multis > 1)
View(overlaps.multi)
overlaps.multi.plus <- overlaps.multi %>%
mutate(strand = str_split_fixed(X8,'[@]',2)[,1])
View(overlaps.multi.plus)
overlaps.multi.plus <- overlaps.multi %>%
mutate(strand = str_split_fixed(X8,'[@]',2)[,1]) %>%
filter(strand == '#+') %>%
filter(X2 == max(X2))%>%
select(-multis,-strand)
overlaps.multi.minus <- overlaps.multi %>%
mutate(strand = str_split_fixed(X8,'[@]',2)[,1]) %>%
filter(strand == '#-') %>%
filter(X2 == min(X2)) %>%
select(-multis,-strand)
overlaps.filtered <- overlaps %>%
filter(!(X8 %in% overlaps.multi$X8)) %>%
select(-multis) %>%
bind_rows(overlaps.multi.plus) %>%
bind_rows(overlaps.multi.minus)
overlaps.filtered.formatted <- overlaps.filtered %>%
ungroup() %>%
mutate(id = str_split_fixed(X8,';',4)[,3] %>% str_remove_all('Crovir_Transcript_ID=')) %>%
mutate(strand = str_split_fixed(X8,'[@]',2)[,1] %>% str_remove_all('[#]')) %>%
mutate(score = '.') %>%
select(X1,X2,X3,id,score,strand)
View(overlaps.filtered.formatted)
head(overlaps.filtered.formatted)
write_tsv(overlaps.filtered.formatted,'./analysis/5_promoters/_PromoterATACPeaks/Overlap_ATACpeaks_PromWindows_08,09,21.filtered.bed',col_names = F)
write_tsv(overlaps.filtered.formatted,'./analysis/5_promoters/_PromoterATACPeaks/Overlap_ATACpeaks_PromWindows_08.09.21.filtered.bed',col_names = F)
library(tidyverse)
library(ggsignif)
library(ggbeeswarm)
library(patchwork)
ovrlp <- read_tsv('./analysis/5_promoters/PromoterH3K4me3_Overlap_08.09.21.bed',col_names = F)
all.prom <- read_tsv('./analysis/5_promoters/CvvGeneCoords_forABC_08.09.21.bed',col_names = F)
no.ovrlp <- all.prom %>%
mutate(txid = str_remove_all(X4,'ID=')) %>%
filter(str_detect(txid,'trnascan',negate = T)) %>%
filter(!(txid %in% ovrlp$X4))
length(ovrlp$X1)
length(ovrlp$X1) / length(all.prom$X1)
exp <- read_csv('./analysis/1_gene_expression/norm_counts/CvvVenomReg_RepRNAseq_wNonVen_VSTNormCounts_08.02.21.csv') %>%
mutate(avg1DPE = rowMeans(.[,c(4,8,9)])) %>%
mutate(geneID = str_split_fixed(X1,'_',2)[,1]) %>%
mutate(txID = str_split_fixed(X1,'_',2)[,2]) %>%
mutate(ChIPsignal = ifelse(txID %in% ovrlp$X4,'TRUE','FALSE')) %>%
mutate(ChIPsignal = factor(ChIPsignal,levels = c('TRUE','FALSE')))
venPriorityGenes <- read_tsv('./data/venom_annotation/PriorityVenomGenes_08.02.21.txt',col_names = F) %>%
select(txid = 6)
allGenes <- ggplot(exp,aes(x=ChIPsignal,y=avg1DPE,fill=ChIPsignal)) +
geom_boxplot(show.legend = F) +
geom_signif(comparisons = list(c("FALSE", "TRUE")),
map_signif_level = TRUE, textsize=4, tip_length = 0,vjust = 0.5 ) +
scale_fill_manual(values=c('FALSE'='grey','TRUE'='skyblue2')) +
ggtitle('d) All Genes') +
# scale_y_continuous(limits=c(0,max(log10(exp$avg1DPE+1)*1.2))) +
xlab('H3K4me3 Peak Near Promoter') +
ylab('VST Normalized Gene Expression')+
theme_bw() + theme(plot.title.position = 'plot',plot.title = element_text(face='bold'))
allGenes
venom.exp <- exp %>%
filter(exp$txID %in% venPriorityGenes$txid)
allVen <- ggplot(venom.exp,aes(x=ChIPsignal,y=avg1DPE,fill=ChIPsignal)) +
geom_boxplot(show.legend = F) +
geom_signif(comparisons = list(c("FALSE", "TRUE")),
map_signif_level = TRUE, textsize=4, tip_length = 0,vjust = 0.5 ) +
scale_fill_manual(values=c('FALSE'='grey','TRUE'='skyblue2')) +
# scale_y_continuous(limits=c(0,max(log10(venom.exp$avg1DPE+1)*1.2))) +
ggtitle('e) All Venom Genes') +
xlab('H3K4me3 Peak Near Promoter') +
theme_bw() + theme(axis.title.y = element_blank(),plot.title.position = 'plot',plot.title = element_text(face='bold'))
allVen
svmp <- ggplot(subset(venom.exp,str_detect(txID,'SVMP')),aes(x=ChIPsignal,y=avg1DPE,fill=ChIPsignal)) +
geom_boxplot(show.legend = F) +
geom_jitter(width = 0.1,size=1,show.legend = F) +
geom_signif(comparisons = list(c("FALSE", "TRUE")),
map_signif_level = TRUE, textsize=4, tip_length = 0 ,vjust = 0.5) +
scale_fill_manual(values=c('FALSE'='grey','TRUE'='skyblue2')) +
# scale_y_continuous(limits=c(0,max(log10(venom.exp$avg1DPE+1)*1.2))) +
ggtitle('f) SVMPs') +
xlab('H3K4me3 Peak Near Promoter') +
ylab('VST Normalized Gene Expression')+
theme_bw() + theme(plot.title.position = 'plot',plot.title = element_text(face='bold'))
svsp <- ggplot(subset(venom.exp,str_detect(txID,'SVSP')),aes(x=ChIPsignal,y=avg1DPE,fill=ChIPsignal)) +
geom_boxplot(show.legend = F) +
geom_jitter(width = 0.1,size=1,show.legend = F) +
geom_signif(comparisons = list(c("FALSE", "TRUE")),
map_signif_level = TRUE, textsize=4, tip_length = 0 ,vjust = 0.5) +
scale_fill_manual(values=c('FALSE'='grey','TRUE'='skyblue2')) +
# scale_y_continuous(limits=c(0,max(log10(venom.exp$avg1DPE+1)*1.2))) +
ggtitle('g) SVSPs') +
xlab('H3K4me3 Peak Near Promoter') +
theme_bw() + theme(axis.title.y = element_blank(),plot.title.position = 'plot',plot.title = element_text(face='bold'))
svsp
pla2 <- ggplot(subset(venom.exp,str_detect(txID,'PLA2') & txID != 'crovir-transcript-PLA2_gIIE'),aes(x=ChIPsignal,y=avg1DPE,fill=ChIPsignal)) +
geom_boxplot(show.legend = F) +
geom_jitter(width = 0.1,size=1,show.legend = F) +
geom_signif(comparisons = list(c("FALSE", "TRUE")),
map_signif_level = TRUE, textsize=4, tip_length = 0 ,vjust = .5) +
# scale_y_continuous(limits=c(0,max(log10(venom.exp$avg1DPE+1)*1.2))) +
scale_fill_manual(values=c('FALSE'='grey','TRUE'='skyblue2')) +
ggtitle('h) PLA2s') +
xlab('H3K4me3 Peak Near Promoter') +
ylab('VST Normalized Gene Expression')+
theme_bw() + theme(plot.title.position = 'plot',plot.title = element_text(face='bold'))
other <- ggplot(subset(venom.exp,str_detect(txID,'SVSP|SVSP|PLA2|128',negate = T)),aes(x=ChIPsignal,y=avg1DPE,fill=ChIPsignal)) +
geom_boxplot(show.legend = F) +
geom_jitter(width = 0.1,size=1,show.legend = F) +
geom_signif(comparisons = list(c("FALSE", "TRUE")),
map_signif_level = TRUE, textsize=4, tip_length = 0,vjust = 0.5) +
scale_fill_manual(values=c('FALSE'='grey','TRUE'='skyblue2')) +
# scale_y_continuous(limits=c(0,max(log10(venom.exp$avg1DPE+1)*1.2))) +
xlab('H3K4me3 Peak Near Promoter') +
ggtitle('i) Other VGs') +
theme_bw() + theme(axis.title.y = element_blank(),plot.title.position = 'plot',plot.title = element_text(face='bold'))
(allGenes | allVen) / (svmp | svsp ) / (pla2 | other)
>>>>>>> 12acd865853df43c0288bd53bfc09fb14ccd61e4
